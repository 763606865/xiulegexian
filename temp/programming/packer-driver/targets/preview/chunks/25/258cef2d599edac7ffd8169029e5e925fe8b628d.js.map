{"version":3,"sources":["file:///C:/Users/Administrator/Desktop/Cocos/ZA/%E4%BF%AE%E4%BA%86%E4%B8%AA%E4%BB%99/assets/script/enemy/skill/BlackHole.ts"],"names":["_decorator","CircleCollider2D","Contact2DType","em","tagData","EnemySkill","ccclass","property","BlackHole","_touchHero","_attackInterval","_gravitationSpeed","init","_damage","_skillName","_duration","initCircleCollider","collider","node","getComponent","on","END_CONTACT","onEndContact","onBeginContact","self","other","console","log","tag","hero","scheduleOnce","heroInBlackHole","nwp","getWorldPosition","hwp","dispatch","x","y","dis","Math","sqrt","moveDisX","moveDisY","parent","setWorldPosition","z"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, CircleCollider2D, Contact2DType } from 'cc';\r\nimport { em } from '../../global/EventManager';\r\nimport { tagData } from '../../global/globalData';\r\nimport { EnemySkill } from './EnemySkill';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('BlackHole')\r\nexport class BlackHole extends EnemySkill {\r\n    _touchHero: boolean = false;\r\n    _attackInterval = 0.05;\r\n    _gravitationSpeed = 100;\r\n    init() {\r\n        this._damage = 1;\r\n        this._skillName = \"blackHole\";\r\n        this._duration = 15;\r\n        this.initCircleCollider();\r\n        let collider = this.node.getComponent(CircleCollider2D);\r\n        collider.on(Contact2DType.END_CONTACT, this.onEndContact, this)\r\n    }\r\n    onBeginContact(self, other) {\r\n        console.log(\"onBeginContact black hole\");\r\n\r\n        if (other.tag !== tagData.hero) return;\r\n        this._touchHero = true;\r\n        this.scheduleOnce(() => {\r\n            this.heroInBlackHole(other);\r\n        }, this._attackInterval);\r\n        console.log(\"进入黑洞\");\r\n    }\r\n    onEndContact(self, other) {\r\n        console.log(\"离开黑洞\");\r\n        this._touchHero = false;\r\n    }\r\n    heroInBlackHole(other) {\r\n        console.log(\"heroInBlackHole\");\r\n\r\n        if (this._touchHero) {\r\n            let nwp = this.node.getWorldPosition();\r\n            let hwp = em.dispatch(\"getHeroWorldPos\");\r\n            let x = nwp.x - hwp.x;\r\n            let y = nwp.y - hwp.y;\r\n            let dis = Math.sqrt(x * x + y * y);\r\n            let moveDisX = (x == 0 ? 0 : this._attackInterval / (dis / this._gravitationSpeed) * x);\r\n            let moveDisY = (y == 0 ? 0 : this._attackInterval / (dis / this._gravitationSpeed) * y);\r\n            other.node.parent.setWorldPosition(hwp.x + moveDisX, hwp.y + moveDisY, hwp.z);\r\n            em.dispatch(\"usingHeroControlFun\", \"updateBloodProgress\", -this._damage);\r\n            this.scheduleOnce(() => {\r\n                this.heroInBlackHole(other);\r\n            }, this._attackInterval);\r\n        }\r\n    }\r\n}\r\n\r\n"]}