{"version":3,"sources":["file:///C:/Users/Administrator/Desktop/Cocos/%E4%BF%AE%E4%BA%86%E4%B8%AA%E4%BB%99/assets/script/enemy/boss/Boss.ts"],"names":["_decorator","Component","BoxCollider2D","Size","Contact2DType","Sprite","Animation","UITransform","Vec2","find","NodePool","instantiate","em","attackInterval","ggd","groupIndex","tagData","glf","plm","Queue","monsterData","ccclass","property","Boss","_isTouchHero","_isTouchFriend1Skill1","_isTouchSpell","_normalDamage","_sprite","_bloodSprite","_bossId","_rawSpeed","_curSpeed","_canMove","_isInitData","_maxBlood","_curBlood","_skillData","_normalParticlePrefab","_sprintTipsPrefab","_sprintDir","_sprintDis","_sprintSpeed","initBossInfo","bd","node","addPoolToPools","getChildByName","getComponent","id","moveSpeed","canMove","maxBlood","normalDamage","initBossMoveAnim","animKey","updateBlood","initCollider","dispatch","assets","defaultClip","play","collider","addComponent","UIT","bossSize","contentSize","x","y","tag","boss","size","group","enemy","on","BEGIN_CONTACT","onBeginContact","END_CONTACT","onEndContact","onDestroy","console","log","unscheduleAllCallbacks","start","checkupIsInitData","update","deltaTime","stopAll","updateSpriteDirection","moveToHero","dt","targetPos","curPos","getWorldPosition","dis","Math","sqrt","minGapWithHero2","time","moveDisX","moveDisY","setWorldPosition","scale","getScale","setScale","abs","z","accelerateToHero","t","scheduleOnce","changeRotationByDir","dir","angle","bevelLen","sin","asin","PI","loadPrefab","fileName","callback","defaultUrl","initSprintData","sprint","speed","isToSprintHero","offsetDis","endCb","ingCb","ingGap","getTwoPointFlyDir","prefab","anim","startSprint","setContentSize","width","parent","wp","interval","unschedule","destroy","schedule","selfCollider","otherCollider","hero","bossAttackHeroByCollider","friend1Skill1","friendAttackBossByFriend1Skill1","darts","heroAttackBossByDarts","spell","self","other","damage","collectToTarget","f1s1","changeValue","isRepelled","bossIsRepelled","fillRange","getBloodPercentage","hwp","mwp","subtract3f","normalize","backDis","pos","getPosition","setPosition","target","twp","collectDis","getDistanceToHero","pauseAnim","pause","resumeAnim","resume","getDirToHero","nwp","offset","rate","usingNormalParticleOneShot","np","getFromPool","flyDir","active","init","normalParticle","usingNormalParticleTriShot","posArr","usingNormalParticleTriangle","row","triPosArr","getTriangleRow","queue","i","length","initPosArr","arr","j","initPos","dp","push","enqueue","fun","dequeue","layer","usingNormalParticleCircle","total","r","getCirclePos","usingNormalParticleWithDoubleDir","curDir","dirs","getVerticalDirToCurDir","a"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Component, Node, Collider2D, BoxCollider2D, Button, Size, Contact2DType, Color, Sprite, Animation, UITransform, Vec2, find, NodePool, instantiate } from 'cc';\r\nimport { em } from '../../global/EventManager';\r\nimport { attackInterval, ggd, groupIndex, tagData } from '../../global/globalData';\r\nimport { glf } from '../../global/globalFun';\r\nimport { plm } from '../../global/PoolManager';\r\nimport { Queue } from '../../global/Queue';\r\nimport { monsterData } from '../monster/MonsterData';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Boss')\r\nexport class Boss extends Component {\r\n\r\n\r\n\r\n    // 默认属性\r\n    _isTouchHero = false;\r\n    _isTouchFriend1Skill1 = false;\r\n    _isTouchSpell = false;\r\n\r\n    _normalDamage = 99;\r\n\r\n    //待初始化属性\r\n    _sprite: Node;\r\n    _bloodSprite: Sprite;\r\n    _bossId;\r\n    _rawSpeed;\r\n    _curSpeed;\r\n    _canMove = true;\r\n    _isInitData = false;\r\n    _maxBlood = 0;\r\n    _curBlood = 0;\r\n\r\n    //技能相关\r\n    _skillData;\r\n    _normalParticlePrefab: Node;\r\n\r\n    //冲刺碰撞技能\r\n    _sprintTipsPrefab = null;//boss 冲刺预警预制件\r\n    _sprintDir = null; //boss 冲刺方向\r\n    _sprintDis: number; //boss 冲刺距离\r\n    _sprintSpeed: number;//boss 冲刺速度\r\n\r\n\r\n    // =====================初始化阶段=====================\r\n    initBossInfo(bd: { moveSpeed: number, canMove: boolean, id: number, maxBlood: number, normalDamage: number, animKey: string }) {\r\n        this._normalParticlePrefab = find(\"/atom\", this.node);\r\n        plm.addPoolToPools(\"normalParticle\", new NodePool(), this._normalParticlePrefab);\r\n\r\n        this._sprite = this.node.getChildByName(\"sprite\");\r\n        this._bloodSprite = this.node.getChildByName(\"bloodProgressBg\").getChildByName(\"bloodProgress\").getComponent(Sprite);\r\n        this._bossId = bd.id;\r\n        this._rawSpeed = bd.moveSpeed;\r\n        this._curSpeed = bd.moveSpeed;\r\n        this._canMove = bd.canMove;\r\n        this._maxBlood = bd.maxBlood;\r\n        this._curBlood = bd.maxBlood;\r\n        this._normalDamage = bd.normalDamage;\r\n        this.initBossMoveAnim(bd.animKey);\r\n        this.updateBlood(0);\r\n        this.initCollider();\r\n\r\n        this._isInitData = true;\r\n    }\r\n    // 初始化boss移动动画\r\n    initBossMoveAnim(animKey) {\r\n        em.dispatch(\"loadTheDirResources\", \"/anim/enemy/monster/\" + animKey, (assets) => {\r\n            this._sprite.getComponent(Animation).defaultClip = assets;\r\n            this._sprite.getComponent(Animation).play();\r\n        });\r\n    }\r\n\r\n    // 初始化碰撞器\r\n    // initCollider(data: { size: Size, tag: number }) {\r\n    initCollider() {\r\n        let collider = this._sprite.addComponent(BoxCollider2D);\r\n        let UIT = this._sprite.getComponent(UITransform);\r\n        let bossSize = new Size(UIT.contentSize.x, UIT.contentSize.y);\r\n        collider.tag = tagData.boss;\r\n        collider.size = bossSize;\r\n        collider.group = groupIndex.enemy;\r\n\r\n        collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n        collider.on(Contact2DType.END_CONTACT, this.onEndContact, this);\r\n    }\r\n    onDestroy(){\r\n        console.log(\"关闭所有回调\");\r\n        this.unscheduleAllCallbacks();\r\n    }\r\n    start() {\r\n        this.checkupIsInitData();\r\n    }\r\n    //检查是否初始化成功\r\n    checkupIsInitData() {\r\n        if (this._isInitData) {\r\n            console.log(\"初始化boss信息\");\r\n        } else throw \"未初始化boss信息\";\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        if (ggd.stopAll) return;\r\n        this.updateSpriteDirection();\r\n        this.moveToHero(deltaTime);\r\n    }\r\n    //向玩家移动\r\n    moveToHero(dt) {\r\n        if (!this._canMove) return;\r\n        let targetPos = em.dispatch(\"getHeroWorldPos\");\r\n        let curPos = this.node.getWorldPosition();\r\n\r\n        let x = targetPos.x - curPos.x;\r\n        let y = targetPos.y - curPos.y;\r\n        let dis = Math.sqrt(x * x + y * y);\r\n        if (dis >= monsterData.minGapWithHero2) {//离得较近时 无需移动\r\n            let time = dis / this._curSpeed;\r\n            let moveDisX = dt / time * x;\r\n            let moveDisY = dt / time * y;\r\n            this.node.setWorldPosition(curPos.x + moveDisX, curPos.y + moveDisY, 0);\r\n        }\r\n    }\r\n    // // 刷新面朝方向\r\n    updateSpriteDirection() {\r\n        let x = em.dispatch(\"getHeroWorldPos\").x - this.node.getChildByName(\"sprite\").getWorldPosition().x;\r\n        let scale = this.node.getChildByName(\"sprite\").getScale();\r\n\r\n        if (x > 0) this.node.getChildByName(\"sprite\").setScale(-Math.abs(scale.x), scale.y, scale.z);\r\n        else if (x < 0) this.node.getChildByName(\"sprite\").setScale(Math.abs(scale.x), scale.y, scale.z);\r\n    }\r\n    // 加速冲刺\r\n    accelerateToHero(t) {\r\n        this.scheduleOnce(() => {\r\n            this._curSpeed = this._rawSpeed;\r\n        }, t);\r\n    }\r\n    //根据方向改变矩形的旋转\r\n    changeRotationByDir(node, dir) {\r\n        if (dir.x == 0 && dir.y == 0) return;//无方向 暂不处理\r\n        if (dir.x == 0) {//没有x方向\r\n            if (dir.y > 0) node.angle = -90;\r\n            else node.angle = 90;\r\n            return;\r\n        };\r\n        if (dir.y == 0) {//没有y方向\r\n            if (dir.x > 0) node.angle = 180;\r\n            else node.angle = 0;\r\n            return;\r\n        };\r\n        let bevelLen = Math.sqrt(dir.x * dir.x + dir.y * dir.y);\r\n        let sin = Math.abs(dir.y) / bevelLen;\r\n        let asin = Math.asin(sin);\r\n        let angle = asin / Math.PI * 180;\r\n        if (dir.y > 0) {//向上飞行\r\n            if (dir.x > 0) node.angle = 180 + angle;\r\n            else node.angle = 360 - angle;\r\n        } else {\r\n            if (dir.x > 0) node.angle = 180 - angle;\r\n            else node.angle = angle;\r\n        }\r\n    }\r\n    // 动态加载预制件\r\n    loadPrefab(fileName, callback = null) {\r\n        let defaultUrl = \"/prefabs/enemy/\";\r\n        em.dispatch(\"loadTheDirResources\", defaultUrl + fileName, (assets) => {\r\n            if (callback) callback(assets);\r\n        });\r\n    }\r\n    // ==========================boss冲刺攻击==========================\r\n    //初始化冲刺数据\r\n    initSprintData() {\r\n        this.loadPrefab(\"sprintTips\", (assets) => {\r\n            this._sprintTipsPrefab = assets;\r\n        });\r\n        this._sprintSpeed = this._skillData.sprint.speed;\r\n    }\r\n    /**\r\n     * @description 是否冲向玩家\r\n     * @param {number} offsetDis 冲刺后距离目标的距离 修正距离\r\n     * @param {Function} cb 冲刺结束的回调，默认为空\r\n     * @param {Function} ingCb 冲刺过程中的回调，默认为空\r\n     * @param {number} ingGap ingCb的释放间隔\r\n    */\r\n    isToSprintHero(offsetDis: number = 0, endCb: Function = null, ingCb: Function = null, ingGap: number = 1) {\r\n        if (!this._canMove) return;\r\n        let targetPos = em.dispatch(\"getHeroWorldPos\");\r\n        let curPos = this.node.getWorldPosition();\r\n        let x = targetPos.x - curPos.x;\r\n        let y = targetPos.y - curPos.y;\r\n        let dis = Math.sqrt(x * x + y * y) + offsetDis;\r\n        this._canMove = false;\r\n        this._sprintDir = glf.getTwoPointFlyDir(targetPos, curPos);\r\n        this._sprintDis = dis;\r\n        //创建提示预制件\r\n        let prefab = instantiate(this._sprintTipsPrefab);\r\n        let anim = prefab.getComponent(Animation);\r\n        anim.on(\"finished\", () => {\r\n            if(this.node) this.startSprint(prefab, endCb, ingCb, ingGap);\r\n        });\r\n        prefab.getComponent(UITransform).setContentSize(dis, this.node.getChildByName(\"sprite\").getComponent(UITransform).width - 20);\r\n        this.changeRotationByDir(prefab, this._sprintDir);\r\n        // prefab.parent = this.node;\r\n        // prefab.setPosition(0, 0, 0);\r\n        prefab.parent = find(\"Canvas/bulletLayer\");\r\n        let wp = this.node.getWorldPosition();\r\n        prefab.setWorldPosition(wp);\r\n    }\r\n    /**\r\n     * @description 开始冲刺 \r\n     * @param {Node} prefab 提示预制件 播放完毕销毁 \r\n     * @param {Function} endCb 冲刺结束的回调，默认为空 \r\n    */\r\n    startSprint(prefab, endCb: Function = null, ingCb: Function = null, ingGap: number) {\r\n        let interval = 1 / 60;\r\n        let speed = this._sprintSpeed * interval;\r\n        let callback = () => {\r\n            let curPos = this.node.getWorldPosition();\r\n            this.node.setWorldPosition(curPos.x + speed * this._sprintDir.x, curPos.y + speed * this._sprintDir.y, 0);\r\n            this._sprintDis -= speed;\r\n            if (this._sprintDis <= 0) {\r\n                this._sprintDis = 0;\r\n                this.unschedule(callback);\r\n                if (ingCb) this.unschedule(ingCb);\r\n                this._canMove = true;\r\n                prefab.destroy();\r\n                if (endCb) endCb();\r\n            }\r\n        }\r\n        if (ingCb) {\r\n            ingCb();//先执行一遍\r\n            this.schedule(ingCb, ingGap);\r\n        }\r\n        this.schedule(callback, interval);\r\n    }\r\n\r\n    //====================boss碰撞逻辑==========================\r\n    onBeginContact(selfCollider: Collider2D, otherCollider: Collider2D) {\r\n        if (ggd.stopAll) return;\r\n        // console.log(otherCollider);\r\n\r\n        switch (otherCollider.tag) {\r\n            case tagData.hero:\r\n                this._isTouchHero = true;\r\n                this.bossAttackHeroByCollider(selfCollider, otherCollider);\r\n                break;\r\n            case tagData.friend1Skill1:\r\n                this._isTouchFriend1Skill1 = true;\r\n                this.friendAttackBossByFriend1Skill1(selfCollider, otherCollider);\r\n                break;\r\n            case tagData.darts:\r\n                this.heroAttackBossByDarts();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    onEndContact(selfCollider: Collider2D, otherCollider: Collider2D) {\r\n\r\n        switch (otherCollider.tag) {\r\n            case tagData.hero:\r\n                this._isTouchHero = false;\r\n                break;\r\n            case tagData.spell:\r\n                this._isTouchSpell = false;\r\n                break;\r\n            case tagData.friend1Skill1:\r\n                this._isTouchFriend1Skill1 = false;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    // boss攻击玩家\r\n    bossAttackHeroByCollider(self, other) {\r\n        if (ggd.stopAll) return;\r\n        if (!this._isTouchHero) return;\r\n        let damage = this._normalDamage;\r\n        em.dispatch(\"usingHeroControlFun\", \"createBossDamageTex\", -damage);\r\n        let t: number = 1;\r\n        this.scheduleOnce(() => {\r\n            this.bossAttackHeroByCollider(self, other);\r\n        }, t);\r\n    }\r\n    //被宝宝技能击中\r\n    friendAttackBossByFriend1Skill1(self, other) {\r\n        if (ggd.stopAll) return;\r\n        if (!this._isTouchFriend1Skill1) return;\r\n        let damage = 5;\r\n        em.dispatch(\"createDamageTex\", self.node, damage, { x: 0, y: 20 });\r\n        this.updateBlood(-damage, false);\r\n        this.collectToTarget(self, other);\r\n        this.scheduleOnce(() => {\r\n            this.friendAttackBossByFriend1Skill1(self, other);\r\n        }, attackInterval.f1s1);\r\n    }\r\n    /**\r\n     * @description: boss被飞镖攻击\r\n     */\r\n    heroAttackBossByDarts() {\r\n        console.log(\"boss被飞镖攻击 还没写\");//\r\n    }\r\n\r\n    //更新血量\r\n    updateBlood(changeValue: number, isRepelled = false) {\r\n        this._curBlood += changeValue;\r\n        if (this._curBlood <= 0) {\r\n            this.unscheduleAllCallbacks();\r\n            this.node.destroy();\r\n            ggd.stopAll = true;\r\n            em.dispatch(\"passStage\");\r\n\r\n        } else {\r\n            if (isRepelled) this.bossIsRepelled();\r\n            // this.bossIsRepelled();\r\n        }\r\n        if (this._curBlood > this._maxBlood) this._curBlood = this._maxBlood;\r\n        this._bloodSprite.fillRange = this._curBlood / this._maxBlood;\r\n    }\r\n    // 获取当前血量百分比\r\n    getBloodPercentage() {\r\n        return this._curBlood / this._maxBlood;\r\n    }\r\n    //boss被击退\r\n    bossIsRepelled() {\r\n        // this.flashWhite();//闪白  被击退的特效\r\n        let hwp = em.dispatch(\"getHeroWorldPos\");\r\n        let mwp = this.node.getWorldPosition();\r\n        mwp.subtract3f(hwp.x, hwp.y, hwp.z).normalize();\r\n        let backDis = 20;\r\n        let pos = this.node.getPosition();\r\n        this.node.setPosition(pos.x + backDis * mwp.x, pos.y + backDis * mwp.y, 0);\r\n    }\r\n    //向目标聚合\r\n    collectToTarget(self, target) {\r\n        if (!target) return;//target被销毁等\r\n        let twp = target.node.getWorldPosition();\r\n        let mwp = self.node.getWorldPosition();\r\n        twp.subtract3f(mwp.x, mwp.y, mwp.z).normalize();\r\n        let collectDis = 20;\r\n        let pos = this.node.getPosition();\r\n        this.node.setPosition(pos.x + collectDis * twp.x, pos.y + collectDis * twp.y, 0);\r\n    }\r\n    // 获取距离玩家的距离\r\n    getDistanceToHero() {\r\n        let targetPos = em.dispatch(\"getHeroWorldPos\");\r\n        let curPos = this.node.getWorldPosition();\r\n        let x = targetPos.x - curPos.x;\r\n        let y = targetPos.y - curPos.y;\r\n        return Math.sqrt(x * x + y * y);\r\n    }\r\n    pauseAnim() {\r\n        // this.node.getChildByName(\"sprite\").getComponent(Animation).pause();\r\n        this._sprite.getComponent(Animation).pause();\r\n    }\r\n    resumeAnim() {\r\n        // this.node.getChildByName(\"sprite\").getComponent(Animation).resume();\r\n        this._sprite.getComponent(Animation).resume();\r\n    }\r\n\r\n    // 获取朝向hero的方向\r\n    getDirToHero() {\r\n        let nwp = this.node.getWorldPosition();\r\n        let hwp = em.dispatch(\"getHeroWorldPos\");\r\n        let x = hwp.x - nwp.x;\r\n        let y = hwp.y - nwp.y;\r\n        let dir = {\r\n            x: 0,\r\n            y: 0\r\n        }\r\n        let offset = {\r\n            x: x,\r\n            y: y\r\n        }\r\n        if (offset.x == 0) {\r\n            dir.x = 0;\r\n            dir.y = Math.abs(offset.y) / offset.y;\r\n        } else if (offset.y == 0) {\r\n            dir.x = Math.abs(offset.x) / offset.x;\r\n            dir.y = 0;\r\n        } else {\r\n            let rate = Math.abs(offset.x / offset.y);\r\n            if (rate >= 1) {\r\n                dir.x = Math.abs(offset.x) / offset.x;\r\n                dir.y = 1 / rate * Math.abs(offset.y) / offset.y;\r\n            } else {\r\n                dir.x = rate * Math.abs(offset.x) / offset.x;\r\n                dir.y = Math.abs(offset.y) / offset.y;\r\n            };\r\n        };\r\n        return new Vec2(dir.x, dir.y);\r\n    }\r\n\r\n    //父类提供的子弹 --->atom \r\n    //发射1发子弹 scale 为子弹碰撞体缩放\r\n    usingNormalParticleOneShot(scale = 1) {\r\n        if (ggd.stopAll) return;\r\n        let np = plm.getFromPool(\"normalParticle\");\r\n        let flyDir = this.getDirToHero();\r\n        np.parent = find(\"Canvas/bulletLayer\");\r\n        let wp = this.node.getWorldPosition();\r\n        np.active = true;\r\n        np.setWorldPosition(wp);\r\n        np.getComponent(\"EnemySkill\").init(this._skillData.normalParticle, flyDir, scale);\r\n    }\r\n    // 发射三发子弹\r\n    usingNormalParticleTriShot(posArr, scale = 1) {\r\n        if (ggd.stopAll) return;\r\n        for (const pos of posArr) {\r\n            let np = plm.getFromPool(\"normalParticle\");\r\n            let flyDir = this.getDirToHero();\r\n            np.parent = find(\"Canvas/bulletLayer\");\r\n            let wp = this.node.getWorldPosition();\r\n            np.active = true;\r\n            np.setWorldPosition(wp.x + pos[0], wp.y + pos[1], wp.z);\r\n            np.getComponent(\"EnemySkill\").init(this._skillData.normalParticle, flyDir, scale);\r\n        }\r\n    }\r\n\r\n    //粒子三角 向hero方向释放三角形粒子集\r\n    usingNormalParticleTriangle(scale = 1) {\r\n        let row = 5;\r\n        let triPosArr = glf.getTriangleRow(row);\r\n        let queue = new Queue();\r\n        for (let i = triPosArr.length - 1; i >= 0; i--) {\r\n            let initPosArr = triPosArr[i];\r\n            let arr = [];\r\n            for (let j = 0; j < initPosArr.length; j++) {\r\n                let initPos = initPosArr[j];\r\n                let dp: any = plm.getFromPool(\"normalParticle\");\r\n                dp.active = true;\r\n                dp.setPosition(0, 0, 0);\r\n                dp.initPos = initPos;\r\n                arr.push(dp);\r\n            }\r\n            queue.enqueue(arr);\r\n        }\r\n        let fun = () => {\r\n            if (ggd.stopAll) return;\r\n            let arr = queue.dequeue();\r\n            if (arr) {\r\n                let layer = find(\"Canvas/bulletLayer\");\r\n                for (const dp of arr) {\r\n                    dp.parent = layer;\r\n                    // 转换成可使用的方向\r\n                    let flyDir = this.getDirToHero();\r\n                    let wp = this.node.getWorldPosition();\r\n                    wp.x += dp.initPos[0];\r\n                    wp.y += dp.initPos[1];\r\n                    dp.setWorldPosition(wp);\r\n                    dp.getComponent(\"EnemySkill\").init(this._skillData.normalParticle, flyDir, scale);\r\n                }\r\n            } else this.unschedule(fun);\r\n        }\r\n        this.schedule(fun, 0.2);\r\n    }\r\n    //粒子圈 向周边发射一圈粒子 向周边飞行\r\n    usingNormalParticleCircle(total: number, r: number, scale = 1) {\r\n        let initPosArr = glf.getCirclePos(r, total);\r\n        for (let i = 0; i < total; i++) {\r\n            let dp: any = plm.getFromPool(\"normalParticle\");\r\n            dp.active = true;\r\n            dp.setPosition(0, 0, 0);\r\n            let layer = find(\"Canvas/bulletLayer\");\r\n            dp.parent = layer;\r\n            let initPos = initPosArr[i];\r\n            let dir = { x: initPos[0] / r, y: initPos[1] / r };\r\n            // 转换成可使用的方向\r\n            let flyDir = new Vec2(dir.x, dir.y);\r\n            let wp = this.node.getWorldPosition();\r\n            wp.x += initPos[0];\r\n            wp.y += initPos[1];\r\n            dp.setWorldPosition(wp);\r\n            dp.getComponent(\"EnemySkill\").init(this._skillData.normalParticle, flyDir, scale);\r\n        }\r\n    }\r\n    //向指定方向两端发射子弹 \r\n    usingNormalParticleWithDoubleDir(curDir) {\r\n        console.log(\"向指定方向两端发射子弹\");\r\n        if (ggd.stopAll) return;\r\n        let dirs = this.getVerticalDirToCurDir(curDir);\r\n        for (const dir of dirs) {\r\n            let np = plm.getFromPool(\"normalParticle\");\r\n            np.parent = find(\"Canvas/bulletLayer\");\r\n            let wp = this.node.getWorldPosition();\r\n            np.active = true;\r\n            np.setWorldPosition(wp);\r\n            np.getComponent(\"EnemySkill\").init(this._skillData.normalParticle, dir, 0.2);\r\n        }\r\n    }\r\n    // 获取当前方向上的垂直方向\r\n    getVerticalDirToCurDir(curDir) {\r\n        let a = Math.abs(curDir.x / curDir.y);\r\n        if (a > 1) {\r\n            return [\r\n                { x: curDir.y / curDir.x, y: -1 },\r\n                { x: -curDir.y / curDir.x, y: 1 }\r\n            ];\r\n        } else {\r\n            return [\r\n                { x: 1, y: -curDir.x / curDir.y },\r\n                { x: -1, y: curDir.x / curDir.y }\r\n            ];\r\n        }\r\n    }\r\n}\r\n\r\n"]}