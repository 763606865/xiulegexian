{"version":3,"sources":["file:///C:/Users/Administrator/Desktop/Cocos/%E4%BF%AE%E4%BA%86%E4%B8%AA%E4%BB%99/assets/script/global/EventManager.ts"],"names":["EventManager","ggd","event","add","type","callback","Error","dispatch","params","eventIsDefined","remove","showAllEvents","console","log","versionCode","em"],"mappings":";;;mCAcMA,Y;;;;;;;;;;;;AAdGC,MAAAA,G,iBAAAA,G;;;;;;;AAcHD,MAAAA,Y,GAAN,MAAMA,YAAN,CAAmB;AAAA;AAAA,eACfE,KADe,GACC,EADD;AAAA;;AAEfC,QAAAA,GAAG,CAACC,IAAD,EAAOC,QAAP,EAAiB;AAEhB,cAAI,CAACD,IAAD,IAAS,CAACC,QAAd,EAAwB,MAAM,IAAIC,KAAJ,CAAU,cAAV,CAAN;AACxB,cAAI,KAAKJ,KAAL,CAAWE,IAAX,CAAJ,EAAsB,MAAM,IAAIE,KAAJ,CAAUF,IAAI,GAAG,mBAAjB,CAAN,CAAtB,CACA;AADA,eAEK;AACD,iBAAKF,KAAL,CAAWE,IAAX,IAAmB,EAAnB;AACA,iBAAKF,KAAL,CAAWE,IAAX,EAAiBC,QAAjB,GAA4BA,QAA5B,CAFC,CAGD;AACH;AACJ;;AACDE,QAAAA,QAAQ,CAACH,IAAD,EAAkB;AACtB,cAAI,CAACA,IAAL,EAAW,MAAM,IAAIE,KAAJ,CAAU,UAAV,CAAN;AACX,cAAI,CAAC,KAAKJ,KAAL,CAAWE,IAAX,CAAL,EAAuB,MAAM,IAAIE,KAAJ,CAAU,OAAOF,IAAP,GAAc,KAAxB,CAAN;AACvB,cAAIC,QAAQ,GAAG,KAAKH,KAAL,CAAWE,IAAX,EAAiBC,QAAhC;;AAHsB,4CAARG,MAAQ;AAARA,YAAAA,MAAQ;AAAA;;AAItB,iBAAOH,QAAQ,CAAC,GAAGG,MAAJ,CAAf;AACH,SAlBc,CAmBf;;;AACAC,QAAAA,cAAc,CAACL,IAAD,EAAO;AACjB,cAAI,CAAC,KAAKF,KAAL,CAAWE,IAAX,CAAL,EAAuB,OAAO,KAAP,CAAvB,KACK,OAAO,IAAP;AACR;;AACDM,QAAAA,MAAM,CAACN,IAAD,EAAO;AACT,cAAI,CAACA,IAAL,EAAW,MAAM,IAAIE,KAAJ,CAAU,UAAV,CAAN;AACX,cAAI,CAAC,KAAKJ,KAAL,CAAWE,IAAX,CAAL,EAAuB,MAAM,IAAIE,KAAJ,CAAU,cAAYF,IAAtB,CAAN;AACvB,iBAAO,KAAKF,KAAL,CAAWE,IAAX,EAAiBC,QAAxB;AACA,iBAAO,KAAKH,KAAL,CAAWE,IAAX,CAAP;AACH;;AACDO,QAAAA,aAAa,GAAG;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAjB;AACH;;AAhCc,O,EAmCnB;;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAA;AAAA,sBAAIC,WAAhB;;oBAEMC,E,GAAK,IAAIf,YAAJ,E","sourcesContent":["import { ggd } from \"./globalData\";\r\n\r\n/*\r\n * @Author: li_jiang_wei_12345 739671694@qq.com\r\n * @Date: 2022-09-26 14:06:40\r\n * @LastEditors: li_jiang_wei_12345 739671694@qq.com\r\n * @LastEditTime: 2022-12-08 15:43:40\r\n * @FilePath: \\to-be-immortal\\assets\\script\\global\\EventManager.ts\r\n * @Description: \r\n * \r\n * Copyright (c) 2022 by li_jiang_wei_12345 739671694@qq.com, All Rights Reserved. \r\n */\r\nexport { em }\r\n\r\nclass EventManager {\r\n    event: object = {};\r\n    add(type, callback) {\r\n\r\n        if (!type || !callback) throw new Error(\"事件名称或回调函数未定义\");\r\n        if (this.event[type]) throw new Error(type + \",该事件名称已使用 请使用其它名称\");\r\n        // if (this.event.hasOwnProperty(type)) return console.log(\"该事件名称已使用 请使用其它名称\");\r\n        else {\r\n            this.event[type] = {}\r\n            this.event[type].callback = callback;\r\n            // console.log(\"事件\" + type + \"添加成功\");\r\n        }\r\n    }\r\n    dispatch(type, ...params) {\r\n        if (!type) throw new Error(\"事件名称参数为空\");\r\n        if (!this.event[type]) throw new Error(\"事件\" + type + \"未注册\");\r\n        let callback = this.event[type].callback;\r\n        return callback(...params);\r\n    }\r\n    //事件是否定义\r\n    eventIsDefined(type) {\r\n        if (!this.event[type]) return false;\r\n        else return true;\r\n    }\r\n    remove(type) {\r\n        if (!type) throw new Error(\"事件名称参数为空\");\r\n        if (!this.event[type]) throw new Error(\"移除的事件不存在:\"+type);\r\n        delete this.event[type].callback;\r\n        delete this.event[type];\r\n    }\r\n    showAllEvents() {\r\n        console.log(this.event);\r\n    }\r\n}\r\n\r\n// console.log(\"修了个仙 Google Play version-beta-1.0.3\");\r\nconsole.log(ggd.versionCode);\r\n\r\nconst em = new EventManager();"]}