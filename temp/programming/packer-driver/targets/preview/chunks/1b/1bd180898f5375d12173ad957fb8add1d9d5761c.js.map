{"version":3,"sources":["file:///C:/Users/Administrator/Desktop/Cocos/%E4%BF%AE%E4%BA%86%E4%B8%AA%E4%BB%99/assets/script/hero/weapon/IceSpiritNeedle.ts"],"names":["_decorator","tagData","Weapon","ccclass","property","IceSpiritNeedle","init","data","lv","flyDir","initWeaponInfo","initBoxCollider","sword","changeBulletRotationByFlyDir","colliderMonster","other","isStopRun","isHasAttacked","node","uuid","updateMonsterBlood","_hasAttackedEnemies","push","_canAttackTimes","script","getComponent","addDebuffFrozen","recoveryToPool"],"mappings":";;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;;AAEAC,MAAAA,O,iBAAAA,O;;AACAC,MAAAA,M,iBAAAA,M;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;iCAGjBK,e,WADZF,OAAO,CAAC,iBAAD,C,gBAAR,MACaE,eADb;AAAA;AAAA,4BAC4C;AACxCC,QAAAA,IAAI,CAACC,IAAD,EAAOC,EAAP,EAAWC,MAAX,EAA6C;AAC7C,eAAKC,cAAL,CAAoBF,EAApB,EAAwBD,IAAxB,EAA8BE,MAA9B;AACA,eAAKE,eAAL,CAAqB;AAAA;AAAA,kCAAQC,KAA7B;AACA,eAAKC,4BAAL;AACH;;AACDC,QAAAA,eAAe,CAACC,KAAD,EAAQ;AACnB,cAAI,KAAKC,SAAL,CAAeD,KAAf,CAAJ,EAA2B;AAC3B,cAAI,KAAKE,aAAL,CAAmBF,KAAK,CAACG,IAAN,CAAWC,IAA9B,CAAJ,EAAyC,OAFtB,CAE6B;;AAChD,eAAKC,kBAAL,CAAwBL,KAAxB;;AACA,eAAKM,mBAAL,CAAyBC,IAAzB,CAA8BP,KAAK,CAACG,IAAN,CAAWC,IAAzC;;AACA,eAAKI,eAAL;AACA,cAAIC,MAAM,GAAGT,KAAK,CAACG,IAAN,CAAWO,YAAX,CAAwB,SAAxB,CAAb;AACA,cAAGD,MAAH,EAAWA,MAAM,CAACE,eAAP,CAAuB,CAAvB;AACX,cAAI,KAAKH,eAAL,IAAwB,CAA5B,EAA+B,KAAKI,cAAL;AAClC;;AAfuC,O","sourcesContent":["import { _decorator, Component, Node } from 'cc';\r\nimport { em } from '../../global/EventManager';\r\nimport { tagData } from '../../global/globalData';\r\nimport { Weapon } from './Weapon';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('IceSpiritNeedle')\r\nexport class IceSpiritNeedle extends Weapon {\r\n    init(data, lv, flyDir: { x: number, y: number }) {\r\n        this.initWeaponInfo(lv, data, flyDir);\r\n        this.initBoxCollider(tagData.sword);\r\n        this.changeBulletRotationByFlyDir();\r\n    }\r\n    colliderMonster(other) {\r\n        if (this.isStopRun(other)) return;\r\n        if (this.isHasAttacked(other.node.uuid)) return;//已经被剑攻击过的对象 忽略后续攻击\r\n        this.updateMonsterBlood(other);\r\n        this._hasAttackedEnemies.push(other.node.uuid);\r\n        this._canAttackTimes--;\r\n        let script = other.node.getComponent(\"Monster\");\r\n        if(script) script.addDebuffFrozen(5);\r\n        if (this._canAttackTimes <= 0) this.recoveryToPool();\r\n    }\r\n}\r\n\r\n\r\n"]}