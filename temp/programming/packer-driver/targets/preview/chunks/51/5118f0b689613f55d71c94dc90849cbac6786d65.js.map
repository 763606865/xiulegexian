{"version":3,"sources":["file:///C:/Users/Administrator/Desktop/Cocos/ZA/%E4%BF%AE%E4%BA%86%E4%B8%AA%E4%BB%99/assets/script/layers/MapLayer.ts"],"names":["_decorator","Component","SpriteFrame","Size","find","Sprite","UITransform","Vec3","Rect","Vec2","Prefab","instantiate","BoxCollider2D","Material","em","ggd","groupIndex","tagData","ccclass","property","MapLayer","mapList","_mapSize","_changeOffset","_obsColliderArr","_frozenCountdown","_frozenTotalTime","_frozenSlowTimes","onDestroy","remove","onLoad","add","usingMapLayerFun","bind","getMapLayerProperty","push","node","start","initBg","defaultBgSF","scale","originalSize","x","y","switchMapBg","hwp","dispatch","setWorldPosition","z","index","Math","ceil","curStage","i","length","getComponent","setContentSize","spriteFrame","bgSFs","initObstacles","total","forEach","map","list","pos","splice","random","addObstacle","obs","obstaclePrefab","offset","width","height","parent","setPosition","obsSFs","collider","addComponent","UIT","obsSize","contentSize","tag","obstacle","size","group","string","param","hasOwnProperty","getAllObs","frozenMap","t","slowTimes","console","log","unschedule","frozenCountdownRun","frozenMaterial","setProperty","schedule","material","stopAll","progress","recoveryMapNormalState","normalMaterial","updateMap","dir","curInSideMap","getCurPosMap","isInside","heroIsNearbyMapEdge","farthestMap","getFarthestMap","mapInitDir","getFarthestMapInitPos","curMwp","getWorldPosition","initPos","thePointIsInsideMap","p","wp","rect","contains","thePointIsInsideAnyMap","some","pArr","getThePointNearbyPoint","m1wp","maxDis","mwp","dis","outPoint","subtract","abs"],"mappings":"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","sourcesContent":["/*\r\n * @Author: li_jiang_wei_12345 739671694@qq.com\r\n * @Date: 2022-08-25 14:17:48\r\n * @LastEditors: li_jiang_wei_12345 739671694@qq.com\r\n * @LastEditTime: 2022-11-24 15:19:15\r\n * @FilePath: \\to-be-immortal\\assets\\script\\layers\\MapLayer.ts\r\n * @Description: \r\n * \r\n * Copyright (c) 2022 by li_jiang_wei_12345 739671694@qq.com, All Rights Reserved. \r\n */\r\nimport { _decorator, Component, Node, SpriteFrame, Size, find, Sprite, UITransform, Vec3, Rect, Vec2, math, CacheMode, Prefab, instantiate, BoxCollider2D, Collider2D, Material } from 'cc';\r\nimport { em } from '../global/EventManager';\r\nimport { ggd, groupIndex, tagData } from '../global/globalData';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('MapLayer')\r\nexport class MapLayer extends Component {\r\n    @property(SpriteFrame)\r\n    defaultBgSF = null;\r\n    @property(Prefab)\r\n    obstaclePrefab;\r\n    @property([SpriteFrame])\r\n    bgSFs;\r\n    @property([SpriteFrame])\r\n    obsSFs;\r\n    @property(Material)\r\n    frozenMaterial;\r\n    @property(Material)\r\n    normalMaterial;\r\n\r\n    mapList: Node[] = [];\r\n\r\n    _mapSize: Size;\r\n    // _changeOffset = 700;//手机高度的一半\r\n    _changeOffset = 1000;//手机高度的一半\r\n    _obsColliderArr: Collider2D[] = [];//存放障碍物\r\n    _frozenCountdown: number = 0;//冻结倒计时\r\n    _frozenTotalTime: number = 0;//冻结总时长\r\n    _frozenSlowTimes = 0;//冰冻减速效果\r\n    onDestroy() {\r\n        em.remove(\"usingMapLayerFun\");\r\n        em.remove(\"getMapLayerProperty\");\r\n    }\r\n    onLoad() {\r\n        em.add(\"usingMapLayerFun\", this.usingMapLayerFun.bind(this));\r\n        em.add(\"getMapLayerProperty\", this.getMapLayerProperty.bind(this));\r\n        this.mapList.push(find(\"bg1\", this.node));\r\n        this.mapList.push(find(\"bg2\", this.node));\r\n        this.mapList.push(find(\"bg3\", this.node));\r\n        this.mapList.push(find(\"bg4\", this.node));\r\n    }\r\n\r\n    start() {\r\n        this.initBg();\r\n        // this.initObstacles();\r\n    }\r\n    initBg() {\r\n        if (!this.defaultBgSF) throw \"default bg is null\";\r\n        let scale = 5;//3\r\n        this._mapSize = new Size(this.defaultBgSF.originalSize.x * scale, this.defaultBgSF.originalSize.y * scale);\r\n        // console.log(\"this._mapSize\", this._mapSize);\r\n\r\n        this.switchMapBg();\r\n        let hwp = em.dispatch(\"getHeroWorldPos\");\r\n        this.mapList[0].setWorldPosition(hwp);\r\n        this.mapList[1].setWorldPosition(hwp.x + this._mapSize.x, hwp.y, hwp.z);\r\n        this.mapList[2].setWorldPosition(hwp.x, hwp.y + this._mapSize.y, hwp.z);\r\n        this.mapList[3].setWorldPosition(hwp.x + this._mapSize.x, hwp.y + this._mapSize.y, hwp.z);\r\n    }\r\n    switchMapBg() {\r\n        let index = Math.ceil(ggd.curStage / 10) - 1;\r\n        for (let i = 0; i < this.mapList.length; i++) {\r\n            let node = this.mapList[i];\r\n            node.getComponent(UITransform).setContentSize(this._mapSize);\r\n            // node.getComponent(Sprite).spriteFrame = this.defaultBgSF;\r\n            node.getComponent(Sprite).spriteFrame = this.bgSFs[index];\r\n        }\r\n    }\r\n    // 初始化障碍物\r\n    initObstacles() {\r\n        let total = 10;\r\n        this.mapList.forEach(map => {\r\n            let list = [\r\n                [2, 2], [2, 3], [2, 4], [2, 5], [2, 6], [2, 7],\r\n                [3, 2], [3, 3], [3, 4], [3, 5], [3, 6], [3, 7],\r\n                [4, 2], [4, 3], [4, 6], [4, 7],\r\n                [5, 2], [5, 3], [5, 6], [5, 7],\r\n                [6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7],\r\n                [7, 2], [7, 3], [7, 4], [7, 5], [7, 6], [7, 7]\r\n            ];\r\n            // let list = [\r\n            //     [2, 2], [2, 3], [2, 4], [2, 5], [2, 6], [2, 7],\r\n            //     [3, 2], [3, 3], [3, 4], [3, 5], [3, 6], [3, 7],\r\n            //     [4, 2], [4, 3], [4, 4], [4, 5], [4, 6], [4, 7],\r\n            //     [5, 2], [5, 3], [5, 4], [5, 5], [5, 6], [5, 7],\r\n            //     [6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7],\r\n            //     [7, 2], [7, 3], [7, 4], [7, 5], [7, 6], [7, 7]\r\n            // ];\r\n            for (let i = 0; i < total; i++) {\r\n                let pos = list.splice(Math.random() * list.length | 0, 1)[0];\r\n                this.addObstacle(map, pos);\r\n            };\r\n        });\r\n    }\r\n    addObstacle(map, pos) {\r\n        let obs = instantiate(this.obstaclePrefab);\r\n        let offset = new Size(-this._mapSize.width / 2, -this._mapSize.height / 2);\r\n        obs.parent = map;\r\n        obs.setPosition(pos[0] * 200 + offset.width, pos[1] * 200 + offset.height);\r\n        let index = Math.ceil(ggd.curStage / 10) - 1;\r\n        obs.getComponent(Sprite).spriteFrame = this.obsSFs[index];\r\n        let collider = obs.addComponent(BoxCollider2D);\r\n        let UIT = obs.getComponent(UITransform);\r\n        // let obsSize = new Size(UIT.contentSize.x, UIT.contentSize.y);\r\n        // let obsSize = new Size(UIT.contentSize.x*3/4, UIT.contentSize.y*3/4);\r\n        let obsSize = new Size(UIT.contentSize.x * 1 / 2, UIT.contentSize.y * 1 / 2);\r\n        collider.tag = tagData.obstacle;\r\n        collider.size = obsSize;\r\n        collider.group = groupIndex.obstacle;\r\n        this._obsColliderArr.push(collider);\r\n    }\r\n\r\n    // =================外部调用=================\r\n    usingMapLayerFun(string, ...param) {\r\n        if (this[string] && typeof this[string] == \"function\") return this[string](...param);\r\n        else throw string + \" is not fun or undefined\";\r\n    }\r\n    getMapLayerProperty(string: string) {\r\n        if (this.hasOwnProperty(string)) return this[string];\r\n        else throw \"hero control 中不存在属性：\" + string;\r\n    }\r\n    // 获取所有障碍物\r\n    getAllObs() {\r\n        return this._obsColliderArr;\r\n    }\r\n    //冻结地图\r\n    frozenMap(t, slowTimes) {\r\n        console.log(\"frozenMap\");\r\n        this._frozenCountdown = t;\r\n        this._frozenTotalTime = t;\r\n        this._frozenSlowTimes = slowTimes;\r\n        em.dispatch(\"usingHeroControlFun\", \"isOpenSnowEffect\", true);\r\n        this.unschedule(this.frozenCountdownRun);\r\n        this.frozenMaterial.setProperty(\"frozenProgress\", 0);//还原材质颜色\r\n        this.schedule(this.frozenCountdownRun, 1);\r\n        for (const map of this.mapList) {\r\n            map.getComponent(Sprite).material = this.frozenMaterial;\r\n        }\r\n    }\r\n    // 冻结倒计时运行\r\n    frozenCountdownRun() {\r\n        if (ggd.stopAll) return;\r\n        this._frozenCountdown--;\r\n        let progress = 1 - (this._frozenCountdown / this._frozenTotalTime);\r\n        this.frozenMaterial.setProperty(\"frozenProgress\", progress);\r\n        console.log(\"this._frozenCountdown\", this._frozenCountdown);\r\n        if (this._frozenCountdown <= 0) {\r\n            console.log(\"冻结结束\");\r\n            em.dispatch(\"usingHeroControlFun\", \"isOpenSnowEffect\", false);\r\n            this._frozenCountdown = 0;\r\n            this.unschedule(this.frozenCountdownRun);\r\n            this.recoveryMapNormalState();\r\n        }\r\n    }\r\n    //恢复普通状态\r\n    recoveryMapNormalState() {\r\n        for (const map of this.mapList) {\r\n            map.getComponent(Sprite).material = this.normalMaterial;\r\n        };\r\n    }\r\n    updateMap(dir) {\r\n        //获取当前所在地图\r\n        let curInSideMap = this.getCurPosMap();\r\n        let isInside = this.heroIsNearbyMapEdge();\r\n        // if (isInside) console.log(\"hero is inside rect \");\r\n        if (isInside) return;\r\n        else {\r\n            // console.log(\"hero is outside rect \");\r\n            // 找到距离目前位置最远的切图\r\n            let farthestMap = this.getFarthestMap();\r\n            //判断最远地图需要初始化的位置\r\n            let mapInitDir = this.getFarthestMapInitPos();\r\n            //初始化最远地图地图最新位置\r\n            let curMwp = curInSideMap.getWorldPosition();\r\n            let initPos = new Vec3(curMwp.x + this._mapSize.x * mapInitDir.x, curMwp.y + this._mapSize.y * mapInitDir.y, curMwp.z);\r\n            farthestMap.setWorldPosition(initPos);\r\n            // console.log(\"=====================================\");\r\n        }\r\n    }\r\n    // 获取当前所在地图 \r\n    getCurPosMap() {\r\n        let hwp = em.dispatch(\"getHeroWorldPos\");\r\n        for (let i = 0; i < this.mapList.length; i++) {\r\n            let map = this.mapList[i];\r\n            if (this.thePointIsInsideMap(map, hwp)) return map;\r\n            else continue;\r\n        };\r\n        throw \"hero is outside map.\"\r\n    }\r\n    //判断点是否在小地图中 指定地图\r\n    thePointIsInsideMap(map, p) {\r\n        let wp = map.getWorldPosition();\r\n        let rect = new Rect(wp.x - this._mapSize.x / 2, wp.y - this._mapSize.y / 2, this._mapSize.x, this._mapSize.y);\r\n        return rect.contains(p);\r\n    }\r\n    // 判断点是否在任何一个小地图中\r\n    thePointIsInsideAnyMap(p) {\r\n        return this.mapList.some((map) => {\r\n            return this.thePointIsInsideMap(map, p);\r\n        });\r\n    }\r\n    /**\r\n     * @description: 判断玩家是否在地图边缘 上下左右及其斜角8个方向有一个不在地图中 则处于地图边缘\r\n     */\r\n    heroIsNearbyMapEdge() {\r\n        let hwp = em.dispatch(\"getHeroWorldPos\");\r\n        let pArr = this.getThePointNearbyPoint(hwp);\r\n        return !pArr.some((p) => {\r\n            return !this.mapList.some((map) => {\r\n                return this.thePointIsInsideMap(map, p);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * @description: 获取距离玩家当前位置距离最远的地图\r\n     * @return {Node} \r\n     */\r\n    getFarthestMap() {\r\n        let hwp = em.dispatch(\"getHeroWorldPos\");\r\n        let farthestMap = this.mapList[0];\r\n        let m1wp = this.mapList[0].getWorldPosition();\r\n        let maxDis = (m1wp.x - hwp.x) * (m1wp.x - hwp.x) + (m1wp.y - hwp.y) * (m1wp.y - hwp.y);\r\n        for (let i = 1; i < this.mapList.length; i++) {\r\n            let map = this.mapList[i];\r\n            let mwp = map.getWorldPosition();\r\n            let dis = (mwp.x - hwp.x) * (mwp.x - hwp.x) + (mwp.y - hwp.y) * (mwp.y - hwp.y);\r\n            if (dis > maxDis) {\r\n                maxDis = dis;\r\n                farthestMap = map;\r\n            };\r\n        };\r\n        return farthestMap;\r\n    }\r\n    getFarthestMapInitPos() {\r\n        let hwp = em.dispatch(\"getHeroWorldPos\");\r\n        let pArr = this.getThePointNearbyPoint(hwp);\r\n        let outPoint: Vec2;\r\n        for (let i = 0; i < pArr.length; i++) {\r\n            let p = pArr[i];\r\n            if (!this.thePointIsInsideAnyMap(p)) {\r\n                outPoint = p;\r\n                // console.log(i);\r\n                break;\r\n            }\r\n        };\r\n        let dir = outPoint.subtract(hwp);\r\n        // console.log(\"getFarthestMapInitPos\", dir);\r\n        return new Vec2(dir.x / Math.abs(dir.x), dir.y / Math.abs(dir.y));\r\n    }\r\n    // 获取某点附近的点（8个）\r\n    getThePointNearbyPoint(p) {\r\n        return [\r\n            new Vec2(p.x + this._changeOffset, p.y),//R -->0\r\n            new Vec2(p.x, p.y + this._changeOffset),//U  -->1\r\n            new Vec2(p.x - this._changeOffset, p.y),//L -->2\r\n            new Vec2(p.x, p.y - this._changeOffset),//D -->3\r\n            new Vec2(p.x + this._changeOffset, p.y + this._changeOffset),//UR -->4\r\n            new Vec2(p.x - this._changeOffset, p.y + this._changeOffset),//UL -->5\r\n            new Vec2(p.x - this._changeOffset, p.y - this._changeOffset),//DL -->6\r\n            new Vec2(p.x + this._changeOffset, p.y - this._changeOffset),//DR -->7\r\n        ];\r\n    }\r\n\r\n}\r\n\r\n"]}