{"version":3,"sources":["file:///C:/Users/Administrator/Desktop/TSGFDemo/Demo/%E4%BF%AE%E4%BA%86%E4%B8%AA%E4%BB%99/assets/script/enemy/monster/MonsterLeader.ts"],"names":["_decorator","Sprite","Material","BoxCollider2D","UITransform","Size","Contact2DType","em","groupIndex","tagData","plm","Simulator","Monster","ccclass","property","MonsterLeader","_strengthType","createLeader","id","type","_type","data","JSON","parse","stringify","dispatch","setDefaultMaterialByType","createLeaderStrengthBlood","createLeaderStrengthMoveSpeed","createLeaderStrengthDamage","createLeaderSuperArmor","material","leaderMaterial","_defaultMaterial","spriteComp","node","getComponent","console","log","maxBlood","damage","moveSpeed","setScale","init","_isSuperArmor","_curMonsterData","initMonsterMoveAnim","_maxBlood","_curBlood","_attackInterval","initCollider","_sid","Instance","addAgent","getWorldPosition","collider","addComponent","UIT","monsterSize","contentSize","x","y","tag","monster","size","group","enemy","on","BEGIN_CONTACT","onBeginContact","update","deltaTime","move","updateSpriteDirection","dynamicAvoidCollider","monsterDied","parent","putToPool","afterMonsterDied"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Component, Node, Animation, Sprite, Material, instantiate, find, Vec3, tween, BoxCollider2D, Prefab, UITransform, Size, Contact2DType } from 'cc';\r\nimport { em } from '../../global/EventManager';\r\nimport { ggd, groupIndex, tagData } from '../../global/globalData';\r\nimport { plm } from '../../global/PoolManager';\r\nimport Simulator from '../../RVO/Simulator';\r\nimport { Monster } from './Monster';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('MonsterLeader')\r\nexport class MonsterLeader extends Monster {\r\n\r\n    @property(Material)\r\n    leaderMaterial0;\r\n    @property(Material)\r\n    leaderMaterial1;\r\n    @property(Material)\r\n    leaderMaterial2;\r\n    @property(Material)\r\n    leaderMaterial3;\r\n    @property([Material])\r\n    leaderMaterial: Material[] = [];\r\n\r\n\r\n\r\n    _strengthType: string;//强化类型\r\n\r\n    /**\r\n     * @description:创建精英怪 0为强化血量 1为强化速度型 2为强化伤害 3 为霸体 \r\n     * @param {*} id\r\n     */\r\n    createLeader(id, type) {\r\n        this._type = \"leader\";\r\n        //需要对数据进行修改 进行深拷贝\r\n        let data = JSON.parse(JSON.stringify(em.dispatch(\"getMonsterDataById\", id)));\r\n        this.setDefaultMaterialByType(type);\r\n        switch (type) {\r\n            case 0:\r\n                this.createLeaderStrengthBlood(data);\r\n                break;\r\n            case 1:\r\n                this.createLeaderStrengthMoveSpeed(data);\r\n                break;\r\n            case 2:\r\n                this.createLeaderStrengthDamage(data);\r\n                break;\r\n            case 3:\r\n                this.createLeaderSuperArmor(data);\r\n                break;\r\n\r\n            default:\r\n                throw \"未知的类型：\" + type;\r\n        }\r\n    }\r\n    /**\r\n     * @description: 通过精英怪类型设置默认材质 用于区分不同的精英怪\r\n     * @param {number} type \r\n     * @type {0} 红色描边 血量增加 \r\n     * @type {1} 浅蓝色填充 移速增加 \r\n     * @type {2} 填充 伤害增加 \r\n     * @type {3} 黄色填充 霸体 \r\n     */\r\n    setDefaultMaterialByType(type) {\r\n\r\n        let material = this.leaderMaterial[type];\r\n        // let material = this[\"leaderMaterial\"+type];\r\n        if (!material) throw \"type is \" + type + \" material is error\";\r\n        this._defaultMaterial = material;\r\n        let spriteComp = this.node.getComponent(Sprite);\r\n        spriteComp.material = this._defaultMaterial;\r\n        console.log(\"setDefaultMaterialByType\", this.node);\r\n    }\r\n    //创建强化血量的精英怪\r\n    createLeaderStrengthBlood(data) {\r\n\r\n        this._strengthType = \"blood\";\r\n        console.log(\"创建强化血量精英怪\");\r\n        data.maxBlood *= 20;\r\n        data.damage *= 3;\r\n        data.moveSpeed *= 1.5;\r\n        this.node.setScale(2, 2);\r\n        // console.log(\"createLeaderStrengthBlood\",data);\r\n        this.init(data);\r\n    }\r\n    //创建强化移速精英怪\r\n    createLeaderStrengthMoveSpeed(data) {\r\n\r\n        this._strengthType = \"moveSpeed\";\r\n        console.log(\"创建强化移速精英怪\");\r\n        data.maxBlood *= 5;\r\n        data.damage *= 2;\r\n        data.moveSpeed *= 3;\r\n        this.node.setScale(1.2, 1.2);\r\n        // console.log(\"createLeaderStrengthBlood\",data);\r\n        this.init(data);\r\n    }\r\n    // 创建强化伤害精英怪\r\n    createLeaderStrengthDamage(data) {\r\n\r\n        this._strengthType = \"damage\";\r\n        console.log(\"创建强化伤害精英怪\");\r\n        data.maxBlood *= 10;\r\n        data.damage *= 5;\r\n        data.moveSpeed *= 1.5;\r\n        this.node.setScale(1.5, 1.5);\r\n        // console.log(\"createLeaderStrengthBlood\",data);\r\n        this.init(data);\r\n    }\r\n    // 创建霸体精英怪\r\n    createLeaderSuperArmor(data) {\r\n\r\n        this._strengthType = \"superArmor\";\r\n        console.log(\"创建霸体精英怪\");\r\n        this._isSuperArmor = true;\r\n        data.maxBlood *= 10;\r\n        data.damage *= 2;\r\n        data.moveSpeed *= 2;\r\n        this.node.setScale(1.5, 1.5);\r\n        // console.log(\"createLeaderStrengthBlood\",data);\r\n        this.init(data);\r\n    }\r\n\r\n    init(data) {\r\n        this._curMonsterData = data;\r\n        this.initMonsterMoveAnim(data);\r\n        // this._maxBlood = data.maxBlood;\r\n        this._maxBlood = data.maxBlood * 2;\r\n        this._curBlood = data.maxBlood;\r\n        //所有的精英怪 攻击间隔 减半。 如果每种精英怪的需求不一样  则需要在init之前的 创建数据阶段改变内容\r\n        this._attackInterval *= 0.5;\r\n        this.initCollider();\r\n\r\n        //添加代理\r\n        this._sid = Simulator.Instance.addAgent(this.node.getWorldPosition());\r\n    }\r\n    initCollider() {\r\n        let collider = this.getComponent(BoxCollider2D);\r\n        if (!collider) collider = this.node.addComponent(BoxCollider2D);\r\n        let UIT = this.node.getComponent(UITransform);\r\n        // let monsterSize = new Size(UIT.contentSize.x, UIT.contentSize.y);\r\n        //碰撞体积缩小到1/4\r\n        // let monsterSize = new Size(UIT.contentSize.x, UIT.contentSize.y);\r\n        let monsterSize = new Size(UIT.contentSize.x / 2, UIT.contentSize.y / 2);\r\n        // let monsterSize = new Size(UIT.contentSize.x*2/3, UIT.contentSize.y*2/3);\r\n\r\n        collider.tag = tagData.monster;\r\n        collider.size = monsterSize;\r\n        collider.group = groupIndex.enemy;\r\n\r\n        collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n\r\n    }\r\n    update(deltaTime: number) {\r\n        this.move();\r\n        this.updateSpriteDirection();\r\n    }\r\n    //精英怪 无视碰撞\r\n    dynamicAvoidCollider() {\r\n        return null;\r\n    }\r\n\r\n    //=======================重新方法=======================\r\n    monsterDied() {\r\n        //节点已经被清除 无法找到父节点 血条更新处理\r\n        if (this.node.parent) {\r\n            plm.putToPool(\"monsterLeader\", this.node);\r\n            em.dispatch(\"updateLeaderCurTotal\", -1);\r\n            em.dispatch(\"showKillLeaderReward\", this._strengthType);\r\n            // 加经验\r\n            em.dispatch(\"usingHeroControlFun\", \"updateExpProgress\", 100);\r\n            // em.dispatch(\"usingHeroControlFun\", \"updateExpProgress\", 200);\r\n            em.dispatch(\"updateKillCountLabel\", 1);\r\n        };\r\n        this.afterMonsterDied();\r\n    }\r\n\r\n}\r\n\r\n"]}