{"version":3,"sources":["file:///C:/Users/Administrator/Desktop/Cocos/ZA/%E4%BF%AE%E4%BA%86%E4%B8%AA%E4%BB%99/assets/script/game/StageManager.ts"],"names":["_decorator","Component","JsonAsset","Label","find","Prefab","instantiate","monsterData","em","ggd","glf","Queue","ccclass","property","StageManager","_curStageName","_curStageTime","_curStageMaxTime","_killCount","_createCount","_curData","_stageConfig","_bossConfig","_rewardConfig","_stageQueue","_curLeaderTotal","_killLeaderTotal","_timeLabel","_killCountLabel","_monsterArmyConfig","_rewardData","string","isPass","isDouble","_hasShowAds","onDestroy","remove","unscheduleAllCallbacks","onLoad","add","endStage","bind","passStage","updateKillCountLabel","updateLeaderCurTotal","getCurStageTime","getDoubleReward","closeGetDoubleRewardAd","geCurStageKillInfo","curStage","stageConfigJson","json","leaderAndBossConfigJson","monsterArmyConfigJson","console","log","rewardConfigJson","initStage","getComponent","start","startStage","justCreateBoss","createBoss","stage","length","time","i","data","enqueue","dequeue","Error","updateTimeLabel","startStageTimer","schedule","stageQueueTaskCallBack","timeGap","startManyMonsterTimer","unschedule","stageTimerCallback","max","monsterMaxTotal","curTotal","dispatch","index","indexOf","key","queueMappingList","queue","monsterID","id","Math","random","x","y","stopAll","bossId","stopCreateMonster","startCount","mod","maxTotal","type","createMonsterByCurData","createFast","distributeReward","startDistributeReward","showDoubleRewardAd","active","onBtnPlayAds","curAdRewardType","playAd","passReward","getPassRewardContent","reward","total","forEach","stageProgress","getIndexByRatio","ratio","dir","queueDir","ratioArr","value","removeBoss","prefab","bossPrefabs","boss","parent","wp","setWorldPosition","z","children","removeFromParent","destroy","progress","floor","getCurStageProgress","num","abs","config","rewardArr","monsterReward","monsterRewardRatio","push","lingshi","ceil","min","leaderReward","leaderRewardRatio","passRewardRatio"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, JsonAsset, random, Label, find, director, Prefab, instantiate, native } from 'cc';\r\nimport { monsterData } from '../enemy/monster/MonsterData';\r\nimport { em } from '../global/EventManager';\r\nimport { ggd } from '../global/globalData';\r\nimport { glf } from '../global/globalFun';\r\nimport { Queue } from '../global/Queue';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('StageManager')\r\nexport class StageManager extends Component {\r\n    @property(JsonAsset)\r\n    stageConfigJson;\r\n    @property(JsonAsset)\r\n    leaderAndBossConfigJson;\r\n    @property(JsonAsset)\r\n    rewardConfigJson;\r\n    @property(JsonAsset)\r\n    monsterArmyConfigJson;\r\n    @property([Prefab])\r\n    bossPrefabs;\r\n\r\n    _curStageName: string;\r\n    _curStageTime: number = 0;//用于记录stage时长\r\n    _curStageMaxTime: number;//当前关卡最大时长\r\n    _killCount: number = 0;//用于记录当前关卡击杀\r\n    _createCount: number = 0;//创建总数 以创建队列数计数\r\n    _curData;\r\n    _stageConfig;\r\n    _bossConfig;\r\n    _rewardConfig;\r\n    _stageQueue;\r\n    _curLeaderTotal: number = 0;//当前精英怪总数\r\n    _killLeaderTotal: number = 0;//击杀精英怪总数\r\n\r\n    _timeLabel: Label;//关卡计时\r\n    _killCountLabel: Label;//击杀计数\r\n\r\n    //怪物潮配置\r\n    _monsterArmyConfig = null;\r\n    _rewardData: any = {\r\n        string: \"击杀奖励\",\r\n        isPass: false,\r\n        isDouble: false,\r\n    };\r\n\r\n    _hasShowAds: boolean = false;\r\n    onDestroy() {\r\n        em.remove(\"endStage\");\r\n        em.remove(\"passStage\");\r\n        em.remove(\"updateKillCountLabel\");\r\n        em.remove(\"updateLeaderCurTotal\");\r\n        em.remove(\"getCurStageTime\");\r\n        em.remove(\"getDoubleReward\");\r\n        em.remove(\"closeGetDoubleRewardAd\");\r\n        em.remove(\"geCurStageKillInfo\");\r\n        this.unscheduleAllCallbacks();\r\n    }\r\n    onLoad() {\r\n        em.add(\"endStage\", this.endStage.bind(this));\r\n        em.add(\"passStage\", this.passStage.bind(this));\r\n        em.add(\"updateKillCountLabel\", this.updateKillCountLabel.bind(this));\r\n        em.add(\"updateLeaderCurTotal\", this.updateLeaderCurTotal.bind(this));\r\n        em.add(\"getCurStageTime\", this.getCurStageTime.bind(this));\r\n        em.add(\"getDoubleReward\", this.getDoubleReward.bind(this));\r\n        em.add(\"closeGetDoubleRewardAd\", this.closeGetDoubleRewardAd.bind(this));\r\n        em.add(\"geCurStageKillInfo\", this.geCurStageKillInfo.bind(this));\r\n        // this._curStageName = \"stage\" + 1;\r\n        this._curStageName = \"stage\" + ggd.curStage;\r\n        this._stageConfig = this.stageConfigJson.json;\r\n        this._bossConfig = this.leaderAndBossConfigJson.json[ggd.curStage - 1];\r\n        this._monsterArmyConfig = this.monsterArmyConfigJson.json[this._curStageName];\r\n        console.log(\"this._monsterArmyConfig\",this._monsterArmyConfig);\r\n        console.log(\"_bossConfig\", this._bossConfig);\r\n\r\n        this._rewardConfig = this.rewardConfigJson.json;\r\n        this._stageQueue = new Queue();\r\n        this.initStage(this._stageConfig[this._curStageName]);\r\n        console.log(this._curStageName + \":\", this._stageConfig[this._curStageName]);\r\n\r\n        this._timeLabel = find(\"Canvas/heroLayer/GameUILayer/expPar/curTime\").getComponent(Label);\r\n        this._killCountLabel = find(\"Canvas/heroLayer/GameUILayer/expPar/curKillCount\").getComponent(Label);\r\n    }\r\n    start() {\r\n        this.startStage();//开始关卡\r\n        // this.justCreateBoss();//boss模式 用于\r\n    }\r\n    justCreateBoss() {\r\n        this.createBoss();\r\n    }\r\n    //初始化关卡 \r\n    initStage(stage) {\r\n        this._curStageMaxTime = stage[stage.length - 1].time;\r\n        for (let i = 0; i < stage.length; i++) {\r\n            let data = stage[i];\r\n            this._stageQueue.enqueue(data);\r\n        };\r\n        this._curData = this._stageQueue.dequeue();\r\n    }\r\n    // 开始关卡\r\n    startStage() {\r\n        if (this._curData == null) throw new Error(\"_curData is null\");\r\n        console.log(\"data\", this._curData);\r\n        this._killCount = 0;\r\n        this.updateKillCountLabel(0);\r\n        this.updateTimeLabel();\r\n        this.startStageTimer();\r\n        this.schedule(this.stageQueueTaskCallBack, this._curData.timeGap);\r\n        //手动配置的敌群\r\n        if (this._monsterArmyConfig) this.schedule(this.startManyMonsterTimer, 1);\r\n    }\r\n    //开启关卡计时器\r\n    startStageTimer() {\r\n        this.unschedule(this.stageTimerCallback);\r\n        // this._curStageTime = 235;\r\n        this._curStageTime = 0;\r\n        this.schedule(this.stageTimerCallback, 1);\r\n    }\r\n    // 开启敌群计时器\r\n    startManyMonsterTimer() {\r\n        let max = this._curData.max > monsterData.monsterMaxTotal ? monsterData.monsterMaxTotal : this._curData.max;\r\n        let curTotal = em.dispatch(\"getMonsterTotal\");\r\n        if (curTotal >= max) return;\r\n        if (this._monsterArmyConfig) {\r\n            let index = this._monsterArmyConfig.time.indexOf(this._curStageTime);\r\n            if (index > -1) {\r\n                // if (config.queue[index] >= 11001) em.dispatch(\"playAnimMassMonsterComing\");\r\n                let key = monsterData.queueMappingList[this._monsterArmyConfig.queue[index]];\r\n                let queue = monsterData.queue[key];\r\n                // console.log(\"key\",key);\r\n                // console.log(\"queue\",queue);\r\n                if (!queue) throw \"queue is error\";\r\n                let monsterID = this._curData.id[Math.random() * this._curData.id.length | 0];\r\n                em.dispatch(\"createMonsterByOutsideData\", monsterID, queue, { x: 0, y: 0 });\r\n            }\r\n        }\r\n    }\r\n    //关卡计时器回调\r\n    stageTimerCallback() {\r\n        if (ggd.stopAll) return;\r\n        this._curStageTime++;\r\n        this.updateTimeLabel();\r\n    }\r\n\r\n\r\n    // 关卡队列任务回调\r\n    stageQueueTaskCallBack() {\r\n        if (ggd.stopAll) return;\r\n        if (this._curStageTime > this._curData.time) {\r\n            console.log(\"进入下一个阶段\");\r\n            this._curData = this._stageQueue.dequeue();\r\n            this.unschedule(this.stageQueueTaskCallBack);\r\n            if (this._curData) this.schedule(this.stageQueueTaskCallBack, this._curData.timeGap);\r\n            else {\r\n                if (this._bossConfig.bossId < 0) this.passStage();\r\n                else {\r\n                    console.log(\"停止创建小怪 开始创建boss\");\r\n                    this.stopCreateMonster();\r\n                    this.createBoss();\r\n                }\r\n            }\r\n        } else {\r\n            // console.log(\"运行当前环境\");\r\n            let max = this._curData.max > monsterData.monsterMaxTotal ? monsterData.monsterMaxTotal : this._curData.max;\r\n            // let max = this._curData.max > 300 ? 300 : this._curData.max;\r\n            let curTotal = em.dispatch(\"getMonsterTotal\");\r\n            // let max = this._curData.max;\r\n            if (curTotal < max) {//小于当前最大数生成\r\n                // if (curTotal < 500) {//小于当前最大数生成\r\n                // if (curTotal < 800) {//小于当前最大数生成\r\n                this._createCount++;\r\n                if (this._createCount > this._bossConfig.startCount && this._createCount % this._bossConfig.mod == 0 && this._curLeaderTotal < this._bossConfig.maxTotal) {\r\n                    let monsterID = this._curData.id[Math.random() * this._curData.id.length | 0];\r\n                    let type = this._bossConfig.type[Math.random() * this._bossConfig.type.length | 0];\r\n                    em.dispatch(\"createMonsterLeader\", monsterID, type);\r\n                    this._curLeaderTotal++;\r\n                } else {\r\n                    this.createMonsterByCurData();\r\n                    // this.createFast();\r\n                    // this.createFast();\r\n                    // this.createFast();\r\n                    // this.createFast();\r\n                    // this.createFast();\r\n                    // this.createFast();\r\n                    // // 创建精英怪\r\n                    // let monsterID = this._curData.id[Math.random() * this._curData.id.length | 0];\r\n                    // let type = this._bossConfig.type[Math.random() * this._bossConfig.type.length | 0];\r\n                    // em.dispatch(\"createMonsterLeader\", monsterID, type);\r\n                    //如果当前怪物总数小于最大值创建数数的1/3 则继续创建\r\n                    // curTotal = em.dispatch(\"getMonsterTotal\");\r\n                    // if (curTotal < max / 3) this.createFast();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // 快速创建\r\n    createFast() {\r\n        this.createMonsterByCurData();\r\n        this.createMonsterByCurData();\r\n        this.createMonsterByCurData();\r\n        this.createMonsterByCurData();\r\n        this.createMonsterByCurData();\r\n    }\r\n    distributeReward(string: string, isPass: boolean = false) {\r\n        // console.log(\"击杀怪物总数\", this._killCount);\r\n        // console.log(\"击杀精英怪总数\", this._killLeaderTotal);\r\n        // console.log(\"根据击杀 发放奖励\");\r\n        em.dispatch(\"usingHeroControlFun\", \"pauseGame\");\r\n        this._rewardData = {\r\n            string: string,\r\n            isPass: isPass,\r\n            isDouble: false,\r\n        };\r\n        this.startDistributeReward();\r\n    }\r\n    // distributeReward(string: string, isPass: boolean = false) {\r\n    //     // console.log(\"击杀怪物总数\", this._killCount);\r\n    //     // console.log(\"击杀精英怪总数\", this._killLeaderTotal);\r\n    //     // console.log(\"根据击杀 发放奖励\");\r\n    //     em.dispatch(\"usingHeroControlFun\", \"pauseGame\");\r\n    //     this._rewardData = {\r\n    //         string: string,\r\n    //         isPass: isPass,\r\n    //         isDouble: false,\r\n    //     };\r\n    //     if (ggd.isOpenAd && !this._hasShowAds) {\r\n    //         this.showDoubleRewardAd();\r\n    //         this._hasShowAds = true;\r\n    //     } else this.startDistributeReward();\r\n    // }\r\n    showDoubleRewardAd() {\r\n        console.log(\"展示双倍奖励广告界面\");\r\n        find(\"Canvas/heroLayer/GameUILayer/doubleRewardAd\").active = true;\r\n    }\r\n    onBtnPlayAds() {\r\n        ggd.curAdRewardType = \"getDoubleReward\";\r\n        glf.playAd();\r\n        find(\"Canvas/heroLayer/GameUILayer/doubleRewardAd\").active = false;\r\n        // console.log(\"播放广告\");\r\n        // this.scheduleOnce(()=>{\r\n        //     this.getDoubleReward();\r\n        // },3);\r\n    }\r\n    getDoubleReward() {\r\n        this._rewardData.isDouble = true;\r\n        this.startDistributeReward();\r\n    }\r\n    closeGetDoubleRewardAd() {\r\n        find(\"Canvas/heroLayer/GameUILayer/doubleRewardAd\").active = false;\r\n        this.startDistributeReward();\r\n    }\r\n    startDistributeReward() {\r\n        let string = this._rewardData.string;\r\n        let isPass = this._rewardData.isPass;\r\n        let isDouble = this._rewardData.isDouble;\r\n        let passReward = this.getPassRewardContent(isPass);\r\n        if (isDouble) {\r\n            for (const reward of passReward) {\r\n                reward.total *= 2;\r\n            }\r\n            console.log(\"双倍奖励\");\r\n        } else {\r\n            console.log(\"单倍奖励\");\r\n\r\n        }\r\n        em.dispatch(\"showPassReward\", passReward, string,this._rewardData.isDouble);\r\n        // 添加奖励到背包\r\n        passReward.forEach(data => {\r\n            if (data.total > 0) em.dispatch(\"addItemToSS\", data.id, data.total);\r\n        });\r\n        //更新关卡进度\r\n        if (isPass && ggd.curStage + 1 > ggd.stageProgress) {\r\n            ggd.stageProgress = ggd.curStage + 1;\r\n            em.dispatch(\"savingGlobalDataToTempData\");\r\n        }\r\n    }\r\n    //通过当前数据创建怪物\r\n    createMonsterByCurData() {\r\n        let index = this.getIndexByRatio(this._curData.ratio);\r\n        let key = monsterData.queueMappingList[this._curData.queue[index]];\r\n        if (key == \"circleR1000T20\") return;\r\n        if (key == \"heartR500T40\") return;\r\n        let queue = monsterData.queue[key];\r\n        let dir = monsterData.queueDir[key];\r\n        if (!queue) throw new Error(\"找不到映射队列:\" + key);\r\n        if (!dir && dir !== null) throw new Error(\"找不到映射方向:\" + key);//可以改成 指定方向 后期调整\r\n        let monsterID = this._curData.id[Math.random() * this._curData.id.length | 0];\r\n        em.dispatch(\"createMonsterByOutsideData\", monsterID, queue, dir);\r\n    }\r\n    //通过比率获取下标\r\n    getIndexByRatio(ratioArr: []) {\r\n        let ratio = Math.random();\r\n        for (let i = 0; i < ratioArr.length; i++) {\r\n            let value = ratioArr[i];\r\n            if (value >= ratio) return i;\r\n            else continue;\r\n        };\r\n        throw new Error(\"value均小于1，ratioArr 配置错误\");\r\n    }\r\n    //通关\r\n    passStage() {\r\n        this.stopCreateMonster();\r\n        this.distributeReward(\"通 关 奖 励\", true);\r\n    }\r\n    //关闭关卡 游戏中途失败\r\n    endStage() {\r\n        console.log(\"关闭关卡\");\r\n        this.stopCreateMonster();\r\n        this.removeBoss();\r\n        this.distributeReward(\"击 杀 奖 励\");\r\n    }\r\n    // 停止小怪生成\r\n    stopCreateMonster() {\r\n        this.unschedule(this.stageQueueTaskCallBack);\r\n        this.unschedule(this.stageTimerCallback);\r\n        em.dispatch(\"removeAllMonsters\");\r\n    }\r\n    // 创建boss\r\n    createBoss() {\r\n        let prefab = this.bossPrefabs[this._bossConfig.bossId - 1];\r\n        if (prefab) {\r\n            let boss = instantiate(prefab);\r\n            // boss.parent = find(\"Canvas/enemyLayer\");\r\n            boss.parent = find(\"Canvas/bossLayer\");\r\n            let wp = em.dispatch(\"getHeroWorldPos\");\r\n            boss.setWorldPosition(wp.x, wp.y + 1000, wp.z);\r\n        } else throw \"prefab is undefined\";\r\n    }\r\n    removeBoss() {\r\n        let boss = find(\"Canvas/bossLayer\").children[0];\r\n        if (boss) {\r\n            boss.removeFromParent();\r\n            boss.destroy();\r\n        };\r\n    }\r\n    //刷新计时信息\r\n    updateTimeLabel() {\r\n        // console.log(\"this._curStageTime\", this._curStageTime);\r\n        let time = \" 时 间 ： \" + this._curStageTime + \" \";\r\n        let progress = \"（进度\" + Math.floor(this.getCurStageProgress() * 100) + \"%）\";\r\n        this._timeLabel.string = time + progress;\r\n    }\r\n    //刷新击杀信息\r\n    updateKillCountLabel(num: number) {\r\n        this._killCount += num;\r\n        this._killCountLabel.string = \" 击 杀 ： \" + this._killCount + \" \";\r\n    }\r\n    //刷新精英怪当前总数 如果 num为负数 说明精英怪被击杀 根据精英怪被击杀数量 刷新精英怪出现的最大数量\r\n    updateLeaderCurTotal(num: number) {\r\n        this._curLeaderTotal += num;\r\n        if (num < 0) {\r\n            this._killLeaderTotal += Math.abs(num);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description: 获取通关奖励\r\n     * @param {*} isPass 是否通关 未通关只能获取击杀奖励\r\n     */\r\n    getPassRewardContent(isPass) {\r\n        let config = this._rewardConfig[this._curStageName];\r\n        let rewardArr = [];\r\n        //击杀奖励\r\n        config.monsterReward.forEach((id, index) => {\r\n            let ratio = config.monsterRewardRatio[index];\r\n            let total = 0;\r\n            for (let i = 0; i < this._killCount; i++) {\r\n                let random = Math.random();\r\n                if (random <= ratio) total++;\r\n            };\r\n            if (total > 0) {\r\n                let reward = {\r\n                    id: id,\r\n                    total: total,\r\n                };\r\n                rewardArr.push(reward);\r\n            }\r\n        });\r\n        let lingshi = {\r\n            id: 3,\r\n            total: Math.ceil(this._killCount * (config.lingshi.min + Math.random() * (config.lingshi.max - config.lingshi.min))),\r\n        }\r\n        rewardArr.push(lingshi);\r\n        config.leaderReward.forEach((id, index) => {\r\n            let ratio = config.leaderRewardRatio[index];\r\n            let total = 0;\r\n            for (let i = 0; i < this._killLeaderTotal; i++) {\r\n                let random = Math.random();\r\n                if (random <= ratio) total++;\r\n            };\r\n            if (total > 0) {\r\n                let reward = {\r\n                    id: id,\r\n                    total: total,\r\n                };\r\n                rewardArr.push(reward);\r\n            }\r\n        });\r\n        if (isPass) {\r\n            config.passReward.forEach((id, index) => {\r\n                let ratio = config.passRewardRatio[index];\r\n                if (Math.random() < ratio) rewardArr.push({\r\n                    id: id,\r\n                    total: 1,\r\n                });\r\n            });\r\n        }\r\n        console.log(\"rewardArr\", rewardArr);\r\n        return rewardArr;\r\n    }\r\n    //过去当前关卡时间 \r\n    getCurStageTime() {\r\n        return this._curStageTime;\r\n    }\r\n    //获取当前游戏进度\r\n    getCurStageProgress() {\r\n        let progress = this._curStageTime / this._curStageMaxTime;\r\n        if (progress > 1) progress = 1;\r\n        return progress;\r\n    }\r\n\r\n\r\n    // 获取击杀信息描述\r\n    geCurStageKillInfo() {\r\n        let string: string;\r\n        if (this._rewardData.isPass) string = \"boss击杀：1\\n\";\r\n        else string = \"boss击杀：0\\n\";\r\n        string += \"击杀精英怪总数：\" + this._killLeaderTotal + \"\\n\";\r\n        string += \"击杀怪物总数：\" + this._killCount + \"\\n\";\r\n        return string;\r\n    }\r\n}\r\n\r\n"]}