{"version":3,"sources":["file:///C:/Users/Administrator/Desktop/TSGFDemo/Demo/%E4%BF%AE%E4%BA%86%E4%B8%AA%E4%BB%99/assets/script/enemy/monster/MonsterManager.ts"],"names":["_decorator","Component","Prefab","NodePool","Vec3","JsonAsset","find","BoxCollider2D","Label","Node","plm","em","QuadtreeRect","ggConfig","ggd","Simulator","RVOConfig","ccclass","property","MonsterManager","_initPosList","_monsterProperties","_monsterAnimClips","_createCount","_quadtree","_waitCreateQueue","_monsterParList","onDestroy","remove","onLoad","initAnimClips","add","usingMonsterManagerFun","bind","createMonsterByOutsideData","createMonsterLeader","getMonsterTotal","removeAllMonsters","getMonsterDataById","getMonsterAnimByAnimKey","createMonsterDamageTex","getAllMonsterColliders","getCurMonsterQuadtree","addPoolToPools","monsterChildPrefab","monsterLeaderPrefab","bullet","x","y","initMonsterProperties","settingRVOConfig","initEnemyPar","config","name","node","parent","console","log","Instance","setTimeStep","gameTimeStep","setAgentDefaults","neighborDist","maxNeighbors","timeHorizon","timeHorizonObst","radius","maxSpeed","velocity","updateQuadtree","stopAll","wp","dispatch","quadTreeRange","w","h","width","height","i","children","length","par","child","collider","getComponent","rect","worldAABB","Math","abs","insert","bossLayer","boss","getChildByName","arr","forEach","clip","all","monsterPropertiesJson","json","element","id","start","initQuadTree","showMonsterTotal","interval","schedule","monsterTotal","monsterTotalLabel","string","type","leader","getFromPool","initOffset","getRandomInitPos","setWorldPosition","createLeader","getAllAroundWpList","list","up","down","left","right","dir","obj","z","createQueueCircle","r","total","quarter","sin","PI","sqrt","push","createQueueHeart","unit","radian","cos","queue","createMonsterQueue","coefficient","index","Error","monsterId","addRandomOffset","pos","framingInitMonster","createMonster","update","doStep","max","count","data","shift","prefab","getParNodeByKey","color","active","init","monsterStrongJson","curStage","random","getAllMonster","some","fun","mt","removeSomeMonsters","unschedule","removeFromParent","putToJunkyard","flag","hasOwnProperty","animKey","damage","getAllMonsterScript","pauseAllAnim","doSameThings","resumeAllAnim","funName","components","param","key"],"mappings":"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","sourcesContent":["import { _decorator, Component, Prefab, NodePool, Vec3, JsonAsset, SpriteAtlas, resources, find, AnimationClip, BoxCollider2D, Rect, Label, input, Input, Node } from 'cc';\r\nimport { plm } from '../../global/PoolManager';\r\nimport { monsterData } from './MonsterData';\r\nimport { em } from '../../global/EventManager';\r\nimport QuadtreeRect from '../../plugin/Quadtree';\r\nimport { ggConfig, ggd } from '../../global/globalData';\r\nimport { Queue } from '../../global/Queue';\r\nimport Simulator from '../../RVO/Simulator';\r\nimport RVOConfig from '../../RVO/RVOConfig';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('MonsterManager')\r\nexport class MonsterManager extends Component {\r\n    @property(Prefab)\r\n    monsterChildPrefab = null;\r\n    @property(Prefab)\r\n    monsterLeaderPrefab;\r\n    @property(JsonAsset)\r\n    monsterPropertiesJson;\r\n    @property(JsonAsset)\r\n    monsterStrongJson;\r\n    @property(Label)\r\n    monsterTotalLabel;\r\n    @property(Prefab)\r\n    bullet;\r\n\r\n    _initPosList = null;\r\n    _monsterProperties = {};\r\n    _monsterAnimClips = {};\r\n\r\n    _createCount: number = 0;//记录monster 创建数\r\n\r\n    _quadtree: QuadtreeRect;//四叉树\r\n    _waitCreateQueue = [];//等待创建怪物的队列\r\n    _monsterParList: any;\r\n\r\n    onDestroy() {\r\n        em.remove(\"usingMonsterManagerFun\");\r\n        em.remove(\"createMonsterByOutsideData\");\r\n        em.remove(\"createMonsterLeader\");\r\n        em.remove(\"getMonsterTotal\");\r\n        em.remove(\"removeAllMonsters\");\r\n        em.remove(\"getMonsterDataById\");\r\n        em.remove(\"getMonsterAnimByAnimKey\");\r\n        em.remove(\"createMonsterDamageTex\");\r\n        em.remove(\"getAllMonsterColliders\");\r\n        em.remove(\"getCurMonsterQuadtree\");\r\n    }\r\n    onLoad() {\r\n        this.initAnimClips();//加载所有动画\r\n        em.add(\"usingMonsterManagerFun\", this.usingMonsterManagerFun.bind(this));\r\n        em.add(\"createMonsterByOutsideData\", this.createMonsterByOutsideData.bind(this));\r\n        em.add(\"createMonsterLeader\", this.createMonsterLeader.bind(this));\r\n        em.add(\"getMonsterTotal\", this.getMonsterTotal.bind(this));\r\n        em.add(\"removeAllMonsters\", this.removeAllMonsters.bind(this));\r\n        em.add(\"getMonsterDataById\", this.getMonsterDataById.bind(this));\r\n        em.add(\"getMonsterAnimByAnimKey\", this.getMonsterAnimByAnimKey.bind(this));\r\n        em.add(\"createMonsterDamageTex\", this.createMonsterDamageTex.bind(this));\r\n        em.add(\"getAllMonsterColliders\", this.getAllMonsterColliders.bind(this));\r\n        em.add(\"getCurMonsterQuadtree\", this.getCurMonsterQuadtree.bind(this));\r\n        plm.addPoolToPools(\"monsterChild\", new NodePool(), this.monsterChildPrefab);\r\n        plm.addPoolToPools(\"monsterLeader\", new NodePool(), this.monsterLeaderPrefab);\r\n        plm.addPoolToPools(\"monsterBullet\", new NodePool(), this.bullet);\r\n        // this._initPosList = {\r\n        //     \"up\": { x: 0, y: 100 },\r\n        //     \"down\": { x: 0, y: -100 },\r\n        //     \"left\": { x: -100, y: 0 },\r\n        //     \"right\": { x: 100, y: 0 }\r\n        // };\r\n        this._initPosList = {\r\n            \"up\": { x: 0, y: 300 },\r\n            \"down\": { x: 0, y: -300 },\r\n            \"left\": { x: -300, y: 0 },\r\n            \"right\": { x: 300, y: 0 }\r\n        };\r\n        this.initMonsterProperties();\r\n        this.settingRVOConfig();\r\n        this.initEnemyPar();\r\n    }\r\n    initEnemyPar() {\r\n        this._monsterParList = {};\r\n\r\n        let config = [\"normal\", \"green\", \"red\", \"yellow\", \"others\", \"white\", \"frozen\", \"paralysis\", \"effect_frozen\"];\r\n        for (const name of config) {\r\n            let node = new Node(name);\r\n            node.parent = find(\"Canvas/enemyLayer\");\r\n            this._monsterParList[name] = node;\r\n        };\r\n        console.log(find(\"Canvas/puppetLayer\"));\r\n    }\r\n    settingRVOConfig() {\r\n        Simulator.Instance.setTimeStep(RVOConfig.gameTimeStep);\r\n        Simulator.Instance.setAgentDefaults(RVOConfig.neighborDist, RVOConfig.maxNeighbors, RVOConfig.timeHorizon, RVOConfig.timeHorizonObst,\r\n            RVOConfig.radius, RVOConfig.maxSpeed, RVOConfig.velocity);\r\n    }\r\n    // 刷新四叉树\r\n    updateQuadtree() {\r\n        if (ggd.stopAll) return;\r\n        let wp = em.dispatch(\"getHeroWorldPos\");\r\n        this._quadtree = new QuadtreeRect({\r\n            x: wp.x - ggConfig.quadTreeRange.w / 2,\r\n            y: wp.y - ggConfig.quadTreeRange.h / 2,\r\n            width: ggConfig.quadTreeRange.w,//750\r\n            height: ggConfig.quadTreeRange.h,//1334\r\n        });\r\n        for (let i = 0; i < this.node.children.length; i++) {\r\n            let par = this.node.children[i];\r\n            for (const child of par.children) {\r\n                let collider = child.getComponent(BoxCollider2D);\r\n                // let wp = child.getWorldPosition();\r\n                let rect = collider.worldAABB;\r\n                if (Math.abs((wp.x - rect.x - rect.width / 2)) > ggConfig.quadTreeRange.w / 2) continue;\r\n                if (Math.abs((wp.y - rect.y - rect.height / 2)) > ggConfig.quadTreeRange.h / 2) continue;\r\n                this._quadtree.insert(rect);\r\n            }\r\n        };\r\n        let bossLayer = find(\"Canvas/bossLayer\");\r\n        for (let i = 0; i < bossLayer.children.length; i++) {\r\n            let boss = bossLayer.children[i];\r\n            let collider = boss.getChildByName(\"sprite\").getComponent(BoxCollider2D);\r\n            let rect = collider.worldAABB;\r\n            this._quadtree.insert(rect);\r\n        }\r\n    }\r\n\r\n    // 获取当前四叉树\r\n    getCurMonsterQuadtree() {\r\n        return this._quadtree;\r\n    }\r\n    // 初始化动画剪辑\r\n    initAnimClips() {\r\n        em.dispatch(\"loadTheDir\", \"/anim/enemy/monster\", (arr) => {\r\n            arr.forEach(clip => {\r\n                this._monsterAnimClips[clip.name] = clip;\r\n            });\r\n        });\r\n    }\r\n    // 初始化怪物id属性映射表\r\n    initMonsterProperties() {\r\n        let all = this.monsterPropertiesJson.json;\r\n        all.forEach(element => {\r\n            let id = element.id;\r\n            this._monsterProperties[id] = element;\r\n        });\r\n    }\r\n    start() {\r\n        this.initQuadTree();\r\n        this.showMonsterTotal(1);//测试函数\r\n    }\r\n    // 初始化四叉树\r\n    initQuadTree() {\r\n        let wp = em.dispatch(\"getHeroWorldPos\");\r\n        this._quadtree = new QuadtreeRect({\r\n            x: wp.x - 300,\r\n            y: wp.y - 300,\r\n            width: 600,//750\r\n            height: 1200,//1334\r\n        });\r\n        console.log(\"this._quadtree\", this._quadtree);\r\n    }\r\n    // 日志输出怪物总数\r\n    showMonsterTotal(interval: number) {\r\n        this.schedule(() => {\r\n            let monsterTotal = this.getMonsterTotal();\r\n            // console.log(\"monsterTotal\", monsterTotal);\r\n            this.monsterTotalLabel.string = \"怪物总数：\\n\" + monsterTotal;\r\n        }, interval);\r\n    }\r\n    // 创建精英怪\r\n    createMonsterLeader(id: number, type: number) {\r\n        // let leader = instantiate(this.monsterLeaderPrefab);\r\n        let leader = plm.getFromPool(\"monsterLeader\");\r\n        // leader.parent = find(\"Canvas/enemyLayer\");\r\n        leader.parent = find(\"Canvas/enemyLayer/normal\");\r\n        let initOffset = this.getRandomInitPos();\r\n        let wp = em.dispatch(\"getHeroWorldPos\");\r\n        leader.setWorldPosition(initOffset.x + wp.x, initOffset.y + wp.y, 0);\r\n        leader.getComponent(\"MonsterLeader\").createLeader(id, type);\r\n    }\r\n    //获取玩家附近点\r\n    getAllAroundWpList(wp: { x, y, z }) {\r\n        let list = { up: new Vec3(), down: new Vec3(), left: new Vec3(), right: new Vec3() };\r\n        for (const dir in list) {\r\n            let obj = list[dir];\r\n            obj.x = wp.x + this._initPosList[dir].x;\r\n            obj.y = wp.y + this._initPosList[dir].y;\r\n            obj.z = 0;\r\n        };\r\n        return list;\r\n    }\r\n    //===============创建各种队形===================\r\n    /**\r\n     * @method createQueueCircle  创建圆形队伍\r\n     * @param r 圆形方程半径\r\n     * @param total 生成的在圆上的点的总数\r\n     */\r\n    createQueueCircle(r: number, total: number) {\r\n        if (total % 4 !== 0) throw \"生成的在圆上的点的总数错误，不是4的倍数\" + total;\r\n        let quarter = total / 4;\r\n        let arr = [];\r\n        for (let i = 1; i < quarter; i++) {//第一象限\r\n            let y = r * Math.sin(Math.PI / 180 * i / quarter * 90);\r\n            let x = Math.sqrt(r * r - y * y);\r\n            arr.push([x, y], [x, -y], [-x, y], [-x, -y]);\r\n        };\r\n        arr.push([0, r], [0, -r], [r, 0], [-r, 0]);\r\n        return arr;\r\n    }\r\n    /**\r\n     * @method createQueueHeart 创建心形队伍 \r\n     * @param r 心形方程 半径\r\n     * @param total 生成的在心形上的点的总数\r\n     * 公式 X=16(sinθ)³  Y=13cosθ-5cos2θ-2cos3θ-cos4θ (0≤θ≤2π)\r\n     */\r\n    createQueueHeart(r: number, total: number) {\r\n        if (total < 20) throw \"total过小，无法生成心形方程\";\r\n        let unit = 2 * Math.PI / total;\r\n        r /= 16;// X=16(sinθ)³ 推断 x 最大为16；所以对y缩放\r\n        let arr = [];\r\n        while (total) {\r\n            let radian = unit * total;\r\n            let x = 16 * (Math.sin(radian) ** 3);\r\n            let y = 13 * Math.cos(radian) - 5 * Math.cos(2 * radian) - 2 * Math.cos(3 * radian) - Math.cos(4 * radian);\r\n            x *= r;\r\n            y *= r;\r\n            arr.push([x, y]);\r\n            total--;\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    //==================外部调用=======================\r\n    /**\r\n   * 通过外部数据创建关卡怪物\r\n   * @param {number} id 生成怪物id\r\n   * @param {object} queue 生成怪物队形\r\n   */\r\n    createMonsterByOutsideData(id, queue, initOffset: { x, y } = null) {\r\n        // console.log(\"参数为\",id,queue);\r\n        if (initOffset == null) {\r\n            initOffset = this.getRandomInitPos();\r\n        };\r\n        this.createMonsterQueue(id, queue, initOffset);\r\n    }\r\n    // 获取随机上下左右 四个初始化方向\r\n    getRandomInitPos() {\r\n        let coefficient = 2;\r\n        // let index = Math.random() * 4 | 0;\r\n        this._createCount++;\r\n        let index = this._createCount % 4;\r\n        switch (index) {\r\n            case 0:\r\n                return { x: this._initPosList.up.x * coefficient, y: this._initPosList.up.y * coefficient };\r\n            case 1:\r\n                return { x: this._initPosList.down.x * coefficient, y: this._initPosList.down.y * coefficient };\r\n            case 2:\r\n                return { x: this._initPosList.left.x * coefficient, y: this._initPosList.left.y * coefficient };\r\n            case 3:\r\n                return { x: this._initPosList.right.x * coefficient, y: this._initPosList.right.y * coefficient };\r\n            default:\r\n                throw new Error(\"getRandomInitPos err\");\r\n        }\r\n    }\r\n    //生成怪物   \r\n    createMonsterQueue(monsterId: number, queue: number[][], initOffset: { x, y }) {\r\n        initOffset = this.addRandomOffset(initOffset);\r\n        // console.log(\"initOffset\",initOffset);\r\n        queue.forEach(pos => {\r\n            if (ggConfig.framingInitMonster) this._waitCreateQueue.push({ monsterId, pos, initOffset });\r\n            else this.createMonster(monsterId, pos, initOffset);\r\n        });\r\n    }\r\n    update() {\r\n        if (ggd.stopAll) return;\r\n        this.updateQuadtree();\r\n        Simulator.Instance.doStep();\r\n        if (!ggConfig.framingInitMonster) return;\r\n        if (this._waitCreateQueue.length > 0) {\r\n            // console.log(\"分帧生成\", this._waitCreateQueue);\r\n            let max = 1;\r\n            let count = this._waitCreateQueue.length > max ? max : this._waitCreateQueue.length;\r\n            while (count) {\r\n                let data = this._waitCreateQueue.shift();\r\n                this.createMonster(data.monsterId, data.pos, data.initOffset);\r\n                count--;\r\n            }\r\n        }\r\n    }\r\n    createMonster(id: number, pos: number[], initOffset: { x, y }) {\r\n        let prefab = plm.getFromPool(\"monsterChild\");\r\n        let data = em.dispatch(\"getMonsterDataById\", id);\r\n        // prefab.parent = this.node;\r\n        let wp = em.dispatch(\"getHeroWorldPos\");\r\n        prefab.parent = this.getParNodeByKey(data.color);\r\n        prefab.setWorldPosition(initOffset.x + wp.x + pos[0], initOffset.y + wp.y + pos[1], 0);\r\n        prefab.active = true;\r\n        prefab.getComponent(\"Monster\").init(data, id, this.monsterStrongJson.json[\"stage\" + ggd.curStage]);//初始化碰撞脚本血量\r\n    }\r\n    /**\r\n     * @description: 增加随机偏移量 \r\n     * @param {object} initOffset {x,y} x为x轴上的偏移量 y为y轴上的偏移量\r\n     *  如果x轴或y轴等于0则在该轴上增加0 如果都为0 则不变\r\n     */\r\n    addRandomOffset(initOffset: { x: number, y: number }) {\r\n        if (initOffset.x == 0 && initOffset.y != 0) {\r\n            let y = initOffset.y;\r\n            initOffset.x += Math.random() > 0.5 ? (0.5 * y + Math.random() * y * 0.5 | 0) : -(0.5 * y + Math.random() * y * 0.5 | 0);\r\n        } else if (initOffset.x != 0 && initOffset.y == 0) {\r\n            let x = initOffset.x;\r\n            initOffset.y += Math.random() > 0.5 ? (0.5 * x + Math.random() * x * 0.5 | 0) : -(0.5 * x + Math.random() * x * 0.5 | 0);\r\n        } else return initOffset;\r\n        return initOffset;\r\n    }\r\n    //获取怪物总数  不获取boss \r\n    getMonsterTotal() {\r\n        let total = 0;\r\n        this.node.children.forEach(par => {\r\n            total += par.children.length;\r\n        });\r\n        // let bossLayer = find(\"Canvas/bossLayer\");\r\n        // total += bossLayer.children.length;\r\n        return total;\r\n    }\r\n    //获取所有怪物 不获取boss 信息\r\n    getAllMonster() {\r\n        let all = [];\r\n        for (let i = 0; i < this.node.children.length; i++) {\r\n            let par = this.node.children[i];\r\n            for (const child of par.children) {\r\n                all.push(child);\r\n            }\r\n        };\r\n        // let bossLayer = find(\"Canvas/bossLayer\");\r\n        // for (let i = 0; i < bossLayer.children.length; i++) {\r\n        //     let boss = bossLayer.children[i];\r\n        //     all.push(boss);\r\n        // };\r\n        return all;\r\n    }\r\n    //移除所有怪物\r\n    removeAllMonsters() {\r\n        let some = 50;\r\n        let fun = () => {\r\n            console.log(\"分帧移除\");\r\n            let mt = this.getMonsterTotal();\r\n            console.log(\"mt\", mt);\r\n            if (mt) {\r\n                if (mt >= some) this.removeSomeMonsters(some);\r\n                else this.removeSomeMonsters(mt);\r\n            } else {\r\n                this.unschedule(fun);\r\n            }\r\n        }\r\n        this.schedule(fun, 1 / 60);\r\n    }\r\n    /**\r\n     * @description: 移除指定数量monster \r\n     * @param {*} total 单次移除总数\r\n     * @total 550+： 耗时：18s  some：5\r\n     * @total 550+： 耗时：23s  some：1 \r\n     */\r\n    removeSomeMonsters(total) {\r\n        let all = this.getAllMonster();\r\n        // console.log(\"all\",all);\r\n        while (total) {\r\n            let child = all[total - 1];\r\n            child.removeFromParent();\r\n            plm.putToJunkyard(child);\r\n            total--;\r\n        }\r\n    }\r\n    // //移除所有怪物\r\n    // removeAllMonsters() {\r\n    //     while (this.node.children.length) {\r\n    //         let child = this.node.children[0];\r\n    //         child.removeFromParent();\r\n    //         plm.putToJunkyard(child, true);\r\n    //     };\r\n    // }\r\n    //通过id  获取怪物属性\r\n    getMonsterDataById(id) {\r\n        let flag = this._monsterProperties.hasOwnProperty(id);\r\n        // console.log(\"this._monsterProperties\",this._monsterProperties);\r\n        if (flag) return this._monsterProperties[id];\r\n        else throw \"property \" + id + \" of _monsterProperties is null\";\r\n    }\r\n    // 通过索引获取怪物图片  \r\n    getMonsterAnimByAnimKey(animKey) {\r\n        return this._monsterAnimClips[animKey];\r\n    }\r\n    //创建怪物伤害文本\r\n    createMonsterDamageTex(node, damage) {\r\n        //判断英雄 伤害免疫\r\n        if (em.dispatch(\"getHeroControlProperty\", \"_isDamageImmunity\")) return;\r\n        em.dispatch(\"usingHeroControlFun\", \"updateBloodProgress\", -damage);\r\n    }\r\n    // //创建怪物伤害文本\r\n    // createMonsterDamageTex(node, damage) {\r\n    //     //判断英雄 伤害免疫\r\n    //     if (em.dispatch(\"getHeroControlProperty\", \"_isDamageImmunity\")) return;\r\n    //     em.dispatch(\"createDamageTex\", node, damage, { x: 0, y: 50 });\r\n    //     em.dispatch(\"usingHeroControlFun\", \"updateBloodProgress\", -damage);\r\n    // }\r\n    // 获取敌人节点上所有的碰撞器  精英怪和boss 的未获取\r\n    getAllMonsterColliders() {\r\n        let all = this.getAllMonster();\r\n        let arr = [];\r\n        all.forEach(child => {\r\n            if (child.name == \"monsterChild\") {\r\n                let collider = child.getComponent(BoxCollider2D);\r\n                arr.push(collider)\r\n            }\r\n        });\r\n        return arr;\r\n    }\r\n    // 获取所有怪物的脚本\r\n    getAllMonsterScript() {\r\n        let all = this.getAllMonster();\r\n        let arr = [];\r\n        all.forEach(child => {\r\n            if (child.name == \"monsterChild\") {\r\n                arr.push(child.getComponent(\"Monster\"));\r\n            } else if (child.name == \"monsterLeader\") {\r\n                arr.push(child.getComponent(\"MonsterLeader\"));\r\n            } else {\r\n                // arr.push(child);\r\n                // boss暂未处理\r\n            };\r\n        });\r\n        return arr;\r\n    }\r\n    pauseAllAnim() {\r\n        this.doSameThings(\"pauseAnim\");\r\n    }\r\n    resumeAllAnim() {\r\n        this.doSameThings(\"resumeAnim\");\r\n    }\r\n    // 怪物层所有节点做一样的事情（调用同一方法）\r\n    doSameThings(funName: string) {\r\n        let all = this.getAllMonster();\r\n        all.forEach((child: any) => {\r\n            if (child.name == \"monsterChild\") {\r\n                child.getComponent(\"Monster\")[funName]();\r\n            } else if (child.name == \"monsterLeader\") {\r\n                child.getComponent(\"MonsterLeader\")[funName]();\r\n            } else {//目前为boss\r\n                child.components[0][funName]();\r\n                // child.components[0].pauseAllAnim();\r\n            }\r\n        });\r\n    }\r\n    //使用hero control 方法\r\n    usingMonsterManagerFun(string, ...param) {\r\n        if (this[string] && typeof this[string] == \"function\") return this[string](...param);\r\n        else throw string + \" is not fun or undefined\";\r\n    }\r\n    //根据 key 获取父节点\r\n    getParNodeByKey(key) {\r\n        if (this._monsterParList.hasOwnProperty(key)) return this._monsterParList[key];\r\n        else throw \"getParNodeByKey false\";\r\n    }\r\n}\r\n\r\n"]}