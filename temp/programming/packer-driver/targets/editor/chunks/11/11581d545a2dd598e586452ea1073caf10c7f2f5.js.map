{"version":3,"sources":["file:///C:/Users/Administrator/Desktop/%E4%BF%AE%E4%BA%86%E4%B8%AA%E4%BB%99/assets/script/hero/weapon/Taijihuan.ts"],"names":["_decorator","ggd","tagData","Weapon","ccclass","property","Taijihuan","_fallDuration","_rawDuration","_randomDir","init","data","lv","flyDir","initWeaponInfo","node","setScale","initBoxCollider","sword","x","y","_duration","Math","random","colliderMonster","other","isStopRun","isHasAttacked","uuid","updateMonsterBlood","_hasAttackedEnemies","push","_canAttackTimes","recoveryToPool","weaponMove","deltaTime","stopAll","_flyDir","_moveSpeed","b","rate","sqrt","setPosition","getPosition"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, random } from 'cc';\r\nimport { ggd, tagData } from '../../global/globalData';\r\nimport { plm } from '../../global/PoolManager';\r\nimport { Weapon } from './Weapon';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Taijihuan')\r\nexport class Taijihuan extends Weapon {\r\n\r\n    _fallDuration: number;\r\n    _rawDuration: number;\r\n    _randomDir: number;\r\n    init(data, lv, flyDir: { x: number, y: number }) {\r\n        this.initWeaponInfo(lv, data, flyDir);\r\n        if (lv >= 5) {\r\n            this.node.setScale(2, 2, 1);\r\n        }\r\n        this.initBoxCollider(tagData.sword, { x: -40, y: -40 });\r\n        // if(lv>=5){\r\n        //     this.node.setScale(2,2,1);\r\n        //     this.initBoxCollider(tagData.sword, { x: -80, y: -80 });\r\n        // }else this.initBoxCollider(tagData.sword, { x: -40, y: -40 });\r\n\r\n        this._fallDuration = this._duration * 3 / 4;\r\n        this._rawDuration = this._duration;\r\n        if (Math.random() > 0.5) this._randomDir = 1;\r\n        else this._randomDir = -1;\r\n    }\r\n    colliderMonster(other) {\r\n        if (this.isStopRun(other)) return;\r\n        if (this.isHasAttacked(other.node.uuid)) return;//已经被剑攻击过的对象 忽略后续攻击\r\n        this.updateMonsterBlood(other);\r\n        this._hasAttackedEnemies.push(other.node.uuid);\r\n        this._canAttackTimes--;\r\n        if (this._canAttackTimes <= 0) this.recoveryToPool();\r\n    }\r\n    weaponMove(deltaTime) {\r\n        if (ggd.stopAll) return;\r\n        if (!this._flyDir) return;\r\n        let y = deltaTime * this._moveSpeed;\r\n        let b = 1.2;\r\n\r\n        if (this._duration > this._fallDuration) {//上升\r\n            let rate = (this._duration - this._fallDuration) / (this._rawDuration - this._fallDuration);\r\n            // console.log(\"rate up\", rate);\r\n            y = rate * y;\r\n            let x = Math.sqrt(y) * this._randomDir * b;\r\n            this.node.setPosition(this.node.getPosition().x + x, this.node.getPosition().y + y, 0);\r\n        } else {\r\n            let rate = (this._fallDuration - this._duration) / this._fallDuration;\r\n            if (rate > 1) rate = 1;\r\n            // console.log(\"rate fall\", rate);\r\n            y = rate * y * 2;\r\n            let x = Math.sqrt(y) * this._randomDir * b;\r\n            this.node.setPosition(this.node.getPosition().x + x, this.node.getPosition().y - y, 0);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}