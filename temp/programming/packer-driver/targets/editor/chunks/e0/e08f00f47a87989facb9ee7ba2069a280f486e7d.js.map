{"version":3,"sources":["file:///C:/Users/Administrator/Desktop/%E4%BF%AE%E4%BA%86%E4%B8%AA%E4%BB%99/assets/script/enemy/monster/Monster.ts"],"names":["_decorator","Component","Material","Sprite","BoxCollider2D","UITransform","Size","Contact2DType","Animation","AnimationClip","find","Vec2","Color","em","attackInterval","ggd","groupIndex","tagData","plm","RVOMath","Simulator","Vector2","monsterData","ccclass","property","Monster","_defaultMaterial","_canAttack","_monsterId","_banTouch","_curMonsterData","_maxBlood","_curBlood","_attackInterval","_isSuperArmor","_type","_curMoveSpeedTimes","_speedMonsterSpeedTimes","_monsterSize","_frontCount","_behindCount","_remainingDuration","_waitRepel","_backDis","_diedAnimProgress","_sid","_parKey","_debuffList","_bulletData","_moveAnimClip","_effectList","onDestroy","initDefaultData","init","data","id","strongList","JSON","parse","stringify","damage","maxBlood","blood","moveSpeed","color","defaultMaterial_normal","defaultMaterial_green","defaultMaterial_red","defaultMaterial_yellow","switchParByType","recoveryDefaultMaterial","initMonsterMoveAnim","initCollider","startCountdown","setMonsterStrategyByIdOnTheBegging","Instance","addAgent","node","getWorldPosition","type","parent","dispatch","countdown","unschedule","durationCountdown","schedule","stopAll","runOthers","putToPool","removeAgent","delAgentBySid","baseDamage","Math","floor","x","y","updateBlood","animKey","clip","getComponent","defaultClip","play","assets","collider","addComponent","UIT","contentSize","tag","monster","size","group","enemy","on","BEGIN_CONTACT","onBeginContact","changeValue","backDis","monsterDied","monsterIsRepelled","debuffList","length","console","log","updateDebuffStateByHeroSkill","debuff","addDebuffParalysis","duration","warn","afterMonsterDied","value","flashWhite","getDistanceToHero","targetPos","curPos","getTwoPointDistance","isStrongControlled","recoveryNormalState","spriteComp","material","flashWhiteMaterial","interval","scheduleOnce","playMoveAnim","frozenEffect","debuff_frozen","pauseAnim","paralysisEffect","debuff_paralysis","resumeAnim","collectToTarget","self","target","twp","mwp","subtract3f","z","normalize","collectDis","pos","getPosition","setPosition","pos1","pos2","sqrt","getTwoPointDistance2","other","hero","monsterAttackByCollide","puppet","friend1Skill1","friendAttackMonsterByFriend1Skill1","obstacle","rectIsIntersectsRect","rect1","rect2","intersects","isTouchingHero","collider1","collider2","getChildByName","worldAABB","frozen","getMonsterCurDamage","updateBloodProgress","f1s1","update","dt","effects","indexOf","move","updateSpriteDirection","getAgentPosition","Number","isNaN","setWorldPosition","updatePrefVelocity","goalVector","subtract","absSq","tempV2","times","getMonsterCurMoveSpeed","multiply2","setAgentPrefVelocity","scale","getScale","setScale","abs","pause","resume","timid","state","MSCoefficient","slowTimes","paralysis","addDebuffTimid","t","reduceDebuffTimid","reduceDebuffParalysis","addDebuffFrozen","reduceDebuffFrozen","ejectMonsterInObstacle","hwp","setBulletMonsterStrategy","setFrozenStrategy","setSpeedMonsterStrategy","fastMoveToHeroCurPos","probability","ceil","random","shotOnce","effect_frozen","setMonsterStrategyByIdOnTheBeggingAfterDied","bullet","getFromPool","flyDir","getDirToHero","wp","active","nwp","dir","offset","rate"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Material, Sprite, BoxCollider2D, UITransform, Size, Contact2DType, Collider2D, Rect, Animation, warn, AnimationClip, find, Vec2, Color } from 'cc';\r\nimport { em } from '../../global/EventManager';\r\nimport { attackInterval, ggd, groupIndex, tagData } from '../../global/globalData';\r\nimport { plm } from '../../global/PoolManager';\r\nimport RVOMath from '../../RVO/RVOMath';\r\nimport Simulator from '../../RVO/Simulator';\r\nimport Vector2 from '../../RVO/Vector2';\r\nimport { monsterData } from './MonsterData';\r\nconst { ccclass, property } = _decorator;\r\n//\r\n@ccclass('Monster')\r\nexport class Monster extends Component {\r\n    @property(Material)\r\n    flashWhiteMaterial;\r\n    @property(Material)\r\n    defaultMaterial_normal;\r\n    @property(Material)\r\n    defaultMaterial_green;\r\n    @property(Material)\r\n    defaultMaterial_red;\r\n    @property(Material)\r\n    defaultMaterial_yellow;\r\n    @property(Material)\r\n    debuff_frozen;\r\n    @property(Material)\r\n    debuff_paralysis;\r\n    @property(Material)\r\n    effect_frozen;\r\n    @property(AnimationClip)\r\n    beAttackedAnim;\r\n\r\n    _defaultMaterial;//默认材质\r\n    _canAttack = true;\r\n\r\n    _monsterId: number;\r\n    _banTouch = false;//闪白 怪物无敌\r\n    _curMonsterData = null;\r\n    _maxBlood = 1;//最大血量\r\n    _curBlood = 1;//当前血量\r\n    _attackInterval = 1;\r\n    _isSuperArmor = false;//是否是霸体状态\r\n    _type: string = \"normal\";\r\n    _curMoveSpeedTimes: number = 1;\r\n    _speedMonsterSpeedTimes: number = 1;//速度怪的移速倍率，正常为1\r\n    _monsterSize;\r\n\r\n    _frontCount = 0;\r\n    _behindCount = 0;\r\n    _remainingDuration: number = 0;\r\n    _waitRepel: Boolean = false;\r\n    _backDis: number;\r\n\r\n    _diedAnimProgress: number = 0;//死亡动画进度\r\n    _sid: number = -1;\r\n\r\n    _parKey: string = \"normal\";//父节点 key\r\n\r\n    _debuffList = {\r\n        \"timid\": {\r\n            \"state\": false,\r\n            \"duration\": 0,\r\n            \"damage\": 0.5,\r\n            \"moveSpeed\": 0.5\r\n        },\r\n        \"frozen\": {\r\n            \"state\": false,\r\n            \"duration\": 0,\r\n        },\r\n        \"paralysis\": {\r\n            \"state\": false,\r\n            \"duration\": 0,\r\n        }\r\n    };\r\n\r\n    _bulletData = {\r\n        \"name\": \"monsterBullet\",\r\n        \"damage\": 1,\r\n        \"duration\": 3,\r\n        \"moveSpeed\": 300,\r\n        \"canAttackTimes\": 1,\r\n    }\r\n\r\n    _moveAnimClip: AnimationClip;\r\n\r\n    // 怪物技能效果列表\r\n    _effectList = {\r\n        \"fast\": false,//加速\r\n        \"frozen\": false,//冻结\r\n    };\r\n    onDestroy() {\r\n        this.initDefaultData();\r\n    }\r\n\r\n    init(data, id, strongList) {\r\n        this.initDefaultData();\r\n        this._curMonsterData = JSON.parse(JSON.stringify(data));\r\n        if (strongList) {\r\n            this._curMonsterData.damage = this._curMonsterData.damage * (1 + strongList.damage) | 0;\r\n            this._curMonsterData.maxBlood = this._curMonsterData.maxBlood * (1 + strongList.blood) | 0;\r\n            this._curMonsterData.moveSpeed = this._curMonsterData.moveSpeed * (1 + strongList.moveSpeed) | 0;\r\n        }\r\n        this._monsterId = id;\r\n        switch (this._curMonsterData.color) {\r\n            case \"normal\":\r\n                this._defaultMaterial = this.defaultMaterial_normal;\r\n                break;\r\n            case \"green\":\r\n                this._defaultMaterial = this.defaultMaterial_green;\r\n                break;\r\n            case \"red\":\r\n                this._defaultMaterial = this.defaultMaterial_red;\r\n                break;\r\n            case \"yellow\":\r\n                this._defaultMaterial = this.defaultMaterial_yellow;\r\n                break;\r\n            default:\r\n                throw \"color \" + this._curMonsterData.color + \" is undefined.\";\r\n                break;\r\n        }\r\n        this._parKey = this._curMonsterData.color;\r\n        this.switchParByType(this._parKey);\r\n        this.recoveryDefaultMaterial();\r\n\r\n        // this._curMonsterData = data;\r\n        this.initMonsterMoveAnim(this._curMonsterData);\r\n        this._maxBlood = this._curMonsterData.maxBlood;\r\n        this._curBlood = this._curMonsterData.maxBlood;\r\n        this.initCollider();\r\n        this.startCountdown(120);\r\n        this.setMonsterStrategyByIdOnTheBegging();\r\n        //添加代理\r\n        this._sid = Simulator.Instance.addAgent(this.node.getWorldPosition());\r\n    }\r\n    switchParByType(type) {\r\n        // console.log(\"switchParByType\", type);\r\n        this.node.parent = em.dispatch(\"usingMonsterManagerFun\", \"getParNodeByKey\", type);\r\n    }\r\n    // 倒计时 时间一到 怪物消失\r\n    startCountdown(countdown) {\r\n        this._remainingDuration = countdown;\r\n        this.unschedule(this.durationCountdown);\r\n        this.schedule(this.durationCountdown, 10);\r\n    }\r\n    //怪物存在倒计时 当时间小于等于0时，怪物消失\r\n    durationCountdown() {\r\n        if (ggd.stopAll) return;\r\n        this._remainingDuration -= 10;\r\n        this.runOthers();\r\n        if (this._remainingDuration <= 0) {\r\n            // plm.putToPool(\"monster\", this.node);\r\n            plm.putToPool(\"monsterChild\", this.node);\r\n            this.removeAgent();\r\n            this.unschedule(this.durationCountdown);\r\n        }\r\n    }\r\n\r\n    removeAgent() {\r\n        // console.log(\"移除代理\");\r\n        Simulator.Instance.delAgentBySid(this._sid);\r\n    }\r\n    /**\r\n     * @description: 运行各种状态对怪物的影响\r\n     * @damage  damage = 5%最大生命值 + 5%heroDamage;\r\n     */\r\n    runOthers() {\r\n        // 地形天气原因 冰地形 冰河世纪\r\n        if (em.dispatch(\"getMapLayerProperty\", \"_frozenCountdown\") > 0) {//地形减速\r\n            let baseDamage = this._maxBlood * 0.05 | 0;\r\n            let damage = em.dispatch(\"usingHeroControlFun\", \"getCurDamage\");\r\n            damage = Math.floor(damage * 0.05) + baseDamage;\r\n            em.dispatch(\"createDamageTex\", this.node, damage, { x: 0, y: 20 });\r\n            this.updateBlood(damage);\r\n        }\r\n    }\r\n    initMonsterMoveAnim(data) {\r\n        let animKey = \"monster\" + data.animKey;\r\n        let clip = em.dispatch(\"getMonsterAnimByAnimKey\", animKey);\r\n        if (clip) {\r\n            this._moveAnimClip = clip;\r\n            this.node.getComponent(Animation).defaultClip = clip;\r\n            this.node.getComponent(Animation).play();\r\n        } else {\r\n            em.dispatch(\"loadTheDirResources\", \"/anim/enemy/monster/\" + animKey, (assets) => {\r\n                this._moveAnimClip = assets;\r\n                this.node.getComponent(Animation).defaultClip = assets;\r\n                this.node.getComponent(Animation).play();\r\n            });\r\n        }\r\n    }\r\n    initCollider() {\r\n        let collider = this.getComponent(BoxCollider2D);\r\n        if (!collider) collider = this.node.addComponent(BoxCollider2D);\r\n        let UIT = this.node.getComponent(UITransform);\r\n        // let monsterSize = new Size(UIT.contentSize.x, UIT.contentSize.y);\r\n        // let monsterSize = new Size(UIT.contentSize.x / 2, UIT.contentSize.y / 2);\r\n        // let monsterSize = new Size(UIT.contentSize.x *3/ 4, UIT.contentSize.y *3/ 4);\r\n\r\n        this._monsterSize = new Size(UIT.contentSize.x / 2, UIT.contentSize.y / 2);\r\n        // this._monsterSize = new Size(UIT.contentSize.width/ 2, UIT.contentSize.height / 2);\r\n\r\n        collider.tag = tagData.monster;\r\n        collider.size = this._monsterSize;\r\n        collider.group = groupIndex.enemy;\r\n\r\n        collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n\r\n    }\r\n    //更新血量\r\n    updateBlood(changeValue: number, backDis: number = 0) {\r\n        // console.log(\"monster更新血量\");\r\n        // em.dispatch(\"playOneShot\", \"battle/怪物受击\");\r\n        this._curBlood += changeValue;\r\n        if (this._curBlood <= 0) {\r\n            // // 死亡材质效果,留给boss 使用\r\n            // let spriteComp = this.node.getComponent(Sprite);\r\n            // this._diedAnimProgress = 0;\r\n            // spriteComp.material = this.diedMaterial;\r\n            // this.schedule(this.playDiedEffect, 1 / 60);\r\n\r\n            this.monsterDied();\r\n        } else {\r\n            this.monsterIsRepelled(backDis);\r\n            // 判断是否被控制\r\n            let debuffList = em.dispatch(\"usingSkillManagerFun\", \"getSkillDebuffEffectList\");\r\n            // console.log(\"debuffList\",debuffList);\r\n\r\n            if (debuffList.length > 0) {//目前只表现一种情况 第一种\r\n                console.log(\"debuffList\", debuffList[0]);\r\n                this.updateDebuffStateByHeroSkill(debuffList[0]);\r\n            }\r\n        }\r\n    }\r\n    //根据英雄技能刷新怪物 debuff 状态\r\n    updateDebuffStateByHeroSkill(debuff) {\r\n        switch (debuff.type) {\r\n            case \"paralysis\":\r\n                this.addDebuffParalysis(debuff.duration);\r\n                break;\r\n\r\n            default:\r\n                console.warn(\"未处理的debuff：\" + debuff.type);\r\n                break;\r\n        }\r\n    }\r\n    // // 播放死亡特效\r\n    // playDiedEffect() {\r\n    //     this._diedAnimProgress += 1 / 60;\r\n    //     this.diedMaterial.setProperty(\"diedProgress\", this._diedAnimProgress);\r\n    //     if (this._diedAnimProgress >= 1) {\r\n    //         this.unschedule(this.playDiedEffect);\r\n    //         this.monsterDied();\r\n    //     };\r\n    // }\r\n    //怪物死亡\r\n    monsterDied() {\r\n        plm.putToPool(\"monsterChild\", this.node);\r\n        this.removeAgent();\r\n        // 加经验\r\n        em.dispatch(\"usingHeroControlFun\", \"updateExpProgress\", 100);\r\n        // em.dispatch(\"usingHeroControlFun\", \"updateExpProgress\", 200);\r\n        em.dispatch(\"updateKillCountLabel\", 1);\r\n        this.afterMonsterDied();\r\n    }\r\n\r\n    /**\r\n     * @description: 当怪物死亡后触发的事件\r\n     * 是否触发 血煞功（bloodMakeMeStrong） 和 嗜血术（drinkBlood）\r\n     */\r\n    afterMonsterDied() {\r\n        em.dispatch(\"usingSkillManagerFun\", \"add_bloodMakeMeStrongTimes\");\r\n        let value = em.dispatch(\"usingSkillManagerFun\", \"getRecoveryBloodFromSecretSkill\");\r\n        em.dispatch(\"usingHeroControlFun\", \"updateBloodProgress\", value);\r\n        // this.setMonsterStrategyByIdOnTheBeggingAfterDied();//暂时没用\r\n    }\r\n    //怪物被击退\r\n    monsterIsRepelled(backDis: number) {\r\n        this.flashWhite();//闪白  被击退的特效\r\n        if (!this._isSuperArmor) {//非霸体会被击退\r\n            this._backDis = backDis;\r\n            this._waitRepel = true;\r\n        }\r\n    }\r\n    getDistanceToHero() {\r\n        // let targetPos = em.dispatch(\"getHeroWorldPos\");\r\n        let targetPos = em.dispatch(\"getTargetWorldPos\");\r\n        let curPos = this.node.getWorldPosition();\r\n        return this.getTwoPointDistance(targetPos, curPos);\r\n    }\r\n    //闪白\r\n    flashWhite() {\r\n        if (this.isStrongControlled()) return;//被强控时 不替换材质\r\n        this.unschedule(this.recoveryNormalState);\r\n        this.switchParByType(\"white\");\r\n        let spriteComp = this.node.getComponent(Sprite);\r\n        spriteComp.material = this.flashWhiteMaterial;\r\n        let interval = 0.1;\r\n        this._banTouch = true;\r\n        this.scheduleOnce(this.recoveryNormalState, interval);\r\n    }\r\n    // //闪白\r\n    // flashWhite() {\r\n    //     if (this.isStrongControlled()) return;//被强控时 不替换材质\r\n    //     // this.node.getComponent(Animation).play(this.beAttackedAnim.name);\r\n    //     this.unschedule(this.recoveryNormalState);\r\n    //     let spriteComp = this.node.getComponent(Sprite);\r\n    //     spriteComp.material = this.flashWhiteMaterial;\r\n    //     let interval = 0.1;\r\n    //     this._banTouch = true;\r\n    //     this.scheduleOnce(this.recoveryNormalState, interval);\r\n    // }\r\n    playMoveAnim() {\r\n        this.node.getComponent(Animation).play();\r\n    }\r\n    frozenEffect() {\r\n        let spriteComp = this.node.getComponent(Sprite);\r\n        spriteComp.material = this.debuff_frozen;\r\n        this.switchParByType(\"frozen\");\r\n        this.pauseAnim();\r\n    }\r\n    paralysisEffect() {\r\n        let spriteComp = this.node.getComponent(Sprite);\r\n        spriteComp.material = this.debuff_paralysis;\r\n        this.switchParByType(\"paralysis\");\r\n        this.pauseAnim();\r\n    }\r\n    // 恢复到正常状态\r\n    recoveryNormalState() {\r\n        this._banTouch = false;\r\n        if (this.isStrongControlled()) return;//冻结状态 不恢复到正常\r\n        this.switchParByType(this._parKey);\r\n        this.recoveryDefaultMaterial();\r\n        this.resumeAnim();\r\n    }\r\n    // // 恢复到正常状态\r\n    // recoveryNormalState() {\r\n    //     this._banTouch = false;\r\n    //     if (this.isStrongControlled()) return;//冻结状态 不恢复到正常\r\n    //     this.recoveryDefaultMaterial();\r\n    //     this.resumeAnim();\r\n    // }\r\n    recoveryDefaultMaterial() {\r\n        let spriteComp = this.node.getComponent(Sprite);\r\n        spriteComp.material = this._defaultMaterial;\r\n    }\r\n    //向目标聚合\r\n    collectToTarget(self, target) {\r\n        if (!target) return;//target被销毁等\r\n        let twp = target.node.getWorldPosition();\r\n        let mwp = self.node.getWorldPosition();\r\n        twp.subtract3f(mwp.x, mwp.y, mwp.z).normalize();\r\n        let collectDis = 20;\r\n        let pos = this.node.getPosition();\r\n        this.node.setPosition(pos.x + collectDis * twp.x, pos.y + collectDis * twp.y, 0);\r\n    }\r\n    //获取两点的距离\r\n    getTwoPointDistance(pos1, pos2) {\r\n        let x = pos1.x - pos2.x;\r\n        let y = pos1.y - pos2.y;\r\n        return Math.sqrt(x * x + y * y);\r\n    }\r\n    //获取两点的距离的平方\r\n    getTwoPointDistance2(pos1, pos2) {\r\n        let x = pos1.x - pos2.x;\r\n        let y = pos1.y - pos2.y;\r\n        return x * x + y * y;\r\n    }\r\n\r\n    onBeginContact(self: Collider2D, other: Collider2D) {\r\n        // console.log(\"onBeginContact\");\r\n        // return;\r\n        // if(em.dispatch(\"getMonsterMovingState\")) return;\r\n        if (ggd.stopAll) return;\r\n        if (this._banTouch) return;\r\n        // 只在两个碰撞体开始接触时被调用一次\r\n        if (self.tag == other.tag) return;//同类型碰撞 忽略\r\n        switch (other.tag) {\r\n            case tagData.hero:\r\n                this.monsterAttackByCollide(self, other);\r\n                break;\r\n            case tagData.puppet:\r\n                this.monsterAttackByCollide(self, other, \"puppet\");\r\n                break;\r\n            case tagData.friend1Skill1:\r\n                this.friendAttackMonsterByFriend1Skill1(self, other);\r\n                break;\r\n            case tagData.obstacle:\r\n                // this.ejectMonsterInObstacle(self.worldAABB, other.worldAABB);\r\n                break;\r\n            default://怪物与武器的碰撞在weapon类中处理，这里只处理monster与其他类型的碰撞，如hero、friendSkill\r\n                break;\r\n        }\r\n    }\r\n    //判断矩形是否相交\r\n    rectIsIntersectsRect(rect1, rect2) {\r\n        // console.log(\"rect1 is intersects rect2\", rect1.intersects(rect2));\r\n        // console.log(\"rect1 is containsRect  ide rect2\", rect1.containsRect(rect2));\r\n        return rect1.intersects(rect2);\r\n    }\r\n    /**\r\n     * @description: 通过碰撞体的矩阵是否相交 判断两个物体是否相交\r\n     */\r\n    isTouchingHero() {\r\n        let collider1 = this.getComponent(BoxCollider2D);\r\n        let collider2 = em.dispatch(\"getHeroControlProperty\", \"node\").getChildByName(\"sprite\").getComponent(BoxCollider2D);\r\n        return this.rectIsIntersectsRect(collider1.worldAABB, collider2.worldAABB);\r\n    }\r\n    // 怪物通过碰撞攻击英雄\r\n    monsterAttackByCollide(self, other, type = \"hero\") {\r\n        if (ggd.stopAll) {\r\n            this.scheduleOnce(() => {\r\n                this._canAttack = true;\r\n                this.monsterAttackByCollide(self, other, type);\r\n            }, this._attackInterval);\r\n            return;\r\n        }\r\n        if (!this.rectIsIntersectsRect(self.worldAABB, other.worldAABB)) return;\r\n        if (!this._canAttack) return;\r\n        this._canAttack = false;\r\n        //含有冻结 碰撞后自身消失\r\n        if (this._effectList.frozen && type == \"hero\") {\r\n            em.dispatch(\"usingHeroControlFun\", \"addDebuffSlow\", 5, 10);//降低10点移速 持续5s\r\n        }\r\n        if (type == \"hero\") {\r\n            em.dispatch(\"createMonsterDamageTex\", other.node, this.getMonsterCurDamage());\r\n        } else if (type == \"puppet\") {\r\n            other.node.updateBloodProgress(-this.getMonsterCurDamage());\r\n        } else throw \"type is \" + type;\r\n\r\n\r\n        // let attackInterval = 1;//攻击间隔\r\n        //不同怪物攻击间隔可能不同 后期修改\r\n        this.scheduleOnce(() => {\r\n            this._canAttack = true;\r\n            this.monsterAttackByCollide(self, other, type);\r\n        }, this._attackInterval);\r\n    }\r\n    //被宝宝技能击中\r\n    friendAttackMonsterByFriend1Skill1(self, other) {\r\n        if (ggd.stopAll) return;\r\n        if (!this.rectIsIntersectsRect(self.worldAABB, other.worldAABB)) return;\r\n        let damage = 5;\r\n        em.dispatch(\"createDamageTex\", self.node, damage, { x: 0, y: 20 });\r\n        this.updateBlood(-damage, 0);\r\n        this.collectToTarget(self, other);\r\n        this.scheduleOnce(() => {\r\n            this.friendAttackMonsterByFriend1Skill1(self, other);\r\n        }, attackInterval.f1s1);\r\n    }\r\n    update(dt) {\r\n        //effect4  加速冲向某个方向\r\n        if (this._curMonsterData.effects.indexOf(4) > -1) return;\r\n        this.move();\r\n        this.updateSpriteDirection();\r\n    }\r\n    move() {\r\n        if (this._sid > -1) {\r\n            let pos: Vector2 = Simulator.Instance.getAgentPosition(this._sid);\r\n            // let vel: Vector2 = Simulator.Instance.getAgentPrefVelocity(this._sid);\r\n            if (!Number.isNaN(pos.x) && !Number.isNaN(pos.y)) {\r\n                this.node.setWorldPosition(pos.x, pos.y, 0);\r\n            } else {\r\n                console.log(`sid=${this._sid}的对象PosX=${pos.x},PosY=${pos.y}`);\r\n            }\r\n        }\r\n        this.updatePrefVelocity();\r\n    }\r\n    updatePrefVelocity() {\r\n        let targetPos = em.dispatch(\"getTargetWorldPos\");\r\n        if (targetPos != null) {\r\n            let curPos = Simulator.Instance.getAgentPosition(this._sid);\r\n            let goalVector = Vector2.subtract(targetPos, curPos);\r\n            if (RVOMath.absSq(goalVector) > 1) {\r\n                // goalVector = RVOMath.normalize(goalVector);\r\n                let tempV2 = RVOMath.normalize(goalVector);\r\n                // goalVector = Vector2.multiply2(10,tempV2);\r\n                let times = this.getMonsterCurMoveSpeed() / 100;\r\n                goalVector = Vector2.multiply2(10 * times, tempV2);\r\n                if (this._waitRepel) {\r\n                    times = this._backDis / 100 * 10;\r\n                    goalVector = Vector2.multiply2(10 * times, tempV2);\r\n                    goalVector.x *= -1;\r\n                    goalVector.y *= -1;\r\n                    this._waitRepel = false;\r\n                }\r\n            }\r\n            Simulator.Instance.setAgentPrefVelocity(this._sid, goalVector);\r\n\r\n            //由于完美对称，稍微扰动一下以避免死锁,但是不注释坐标始终会有变化\r\n            // let angle = Math.random() * 2.0 * Math.PI;\r\n            // let dist = Math.random() * 0.1;\r\n            // Simulator.Instance.setAgentPrefVelocity(this._sid, Vector2.addition(Simulator.Instance.getAgentPrefVelocity(this._sid),\r\n            //     Vector2.multiply2(dist, new Vector2(Math.cos(angle), Math.sin(angle)))));\r\n        }\r\n    }\r\n    updateSpriteDirection() {\r\n        if (this.isStrongControlled()) return;\r\n        // let x = em.dispatch(\"getHeroWorldPos\").x - this.node.getWorldPosition().x;\r\n        let x = em.dispatch(\"getTargetWorldPos\").x - this.node.getWorldPosition().x;\r\n        let scale = this.node.getScale();\r\n\r\n        if (x > 0) this.node.setScale(-Math.abs(scale.x), scale.y, scale.z);\r\n        else if (x < 0) this.node.setScale(Math.abs(scale.x), scale.y, scale.z);\r\n    }\r\n    pauseAnim() {\r\n        this.node.getComponent(Animation).pause();\r\n    }\r\n    resumeAnim() {\r\n        if (ggd.stopAll) return;//防止暂停后被击中 调用恢复函数 。恢复了 动画状态\r\n        if (this.isStrongControlled()) return;\r\n        this.node.getComponent(Animation).resume();\r\n    }\r\n\r\n    //=================获取怪物当前信息======================\r\n    // 获取怪物当前伤害\r\n    getMonsterCurDamage() {\r\n        // if (this._debuffList.frozen.state) return this._debuffList.frozen.damage;//冻结\r\n        if (this.isStrongControlled()) return 0;\r\n        let damage = this._curMonsterData.damage;//胆怯\r\n        if (this._debuffList.timid.state) damage *= this._debuffList.timid.damage;\r\n        return damage;\r\n    }\r\n    //获取怪物当前移速\r\n    getMonsterCurMoveSpeed() {\r\n        // if (this._debuffList.frozen.state) return this._debuffList.frozen.moveSpeed;//冻结\r\n        if (this.isStrongControlled()) return 0;\r\n        let moveSpeed = this._curMonsterData.moveSpeed * monsterData.MSCoefficient * this._curMoveSpeedTimes * this._speedMonsterSpeedTimes;\r\n        if (this._debuffList.timid.state) moveSpeed *= this._debuffList.timid.moveSpeed;//胆怯\r\n        if (em.dispatch(\"getMapLayerProperty\", \"_frozenCountdown\") > 0) {//地形减速\r\n            let slowTimes = em.dispatch(\"getMapLayerProperty\", \"_frozenSlowTimes\");\r\n            moveSpeed *= (1 - slowTimes);\r\n        }\r\n        // return moveSpeed*0.1;\r\n        return moveSpeed;\r\n    }\r\n    /**\r\n     * @description: 是否是强控状态 强控包括：麻痹、冻结 \r\n     * 强控状态 无法移动 无法造成伤害\r\n     */\r\n    isStrongControlled() {\r\n        return this._debuffList.frozen.state || this._debuffList.paralysis.state;\r\n    }\r\n\r\n    // 添加 debuff timid\r\n    addDebuffTimid(t) {\r\n        this._debuffList.timid.state = true;\r\n        this._debuffList.timid.duration = t;\r\n        this.unschedule(this.reduceDebuffTimid);\r\n        this.scheduleOnce(this.reduceDebuffTimid, 1);\r\n    }\r\n    // 减去 debuff timid\r\n    reduceDebuffTimid() {\r\n        if (ggd.stopAll) return;\r\n        this._debuffList.timid.duration--;\r\n        if (this._debuffList.timid.duration <= 0) {\r\n            this._debuffList.timid.state = false;\r\n            this.unschedule(this.reduceDebuffTimid);\r\n        }\r\n    }\r\n    // 添加debuff paralysis\r\n    addDebuffParalysis(t) {\r\n        this._debuffList.paralysis.state = true;\r\n        this._debuffList.paralysis.duration = t;\r\n        this.paralysisEffect();\r\n        this.unschedule(this.reduceDebuffParalysis);\r\n        this.schedule(this.reduceDebuffParalysis, 1);\r\n    }\r\n    // 减去 debuff paralysis\r\n    reduceDebuffParalysis() {\r\n        if (ggd.stopAll) return;\r\n        this._debuffList.paralysis.duration--;\r\n        if (this._debuffList.paralysis.duration <= 0) {\r\n            this._debuffList.paralysis.state = false;\r\n            this.recoveryNormalState();\r\n            this.unschedule(this.reduceDebuffParalysis);\r\n        }\r\n    }\r\n    // 添加 debuff frozen\r\n    addDebuffFrozen(t) {\r\n        em.dispatch(\"playOneShot\", \"battle/frozen\");\r\n        this._debuffList.frozen.state = true;\r\n        this._debuffList.frozen.duration = t;\r\n        this.frozenEffect();\r\n        this.unschedule(this.reduceDebuffFrozen);\r\n        this.schedule(this.reduceDebuffFrozen, 1);\r\n    }\r\n    reduceDebuffFrozen() {\r\n        if (ggd.stopAll) return;\r\n        this._debuffList.frozen.duration--;\r\n\r\n        if (this._debuffList.frozen.duration <= 0) {\r\n            this._debuffList.frozen.state = false;\r\n            this.recoveryNormalState();\r\n            this.unschedule(this.reduceDebuffFrozen);\r\n        }\r\n    }\r\n    //弹出卡在墙里的怪物 \r\n    ejectMonsterInObstacle(rect1, rect2) {\r\n        return;\r\n        // console.log(\"碰到墙体，弹出墙体。根据距离，判断弹出距离，还没写。\");\r\n        let backDis = 500;\r\n        let hwp = em.dispatch(\"getHeroWorldPos\");\r\n        let mwp = this.node.getWorldPosition();\r\n        mwp.subtract3f(hwp.x, hwp.y, hwp.z).normalize();\r\n        let pos = this.node.getPosition();\r\n        console.log(\"backDis * mwp.x,\", backDis * mwp.x);\r\n\r\n        this.node.setPosition(pos.x + backDis * mwp.x, pos.y + backDis * mwp.y, 0);\r\n    }\r\n    //======================设置怪物攻击策略=================\r\n    /**\r\n     * @description setMonsterStrategyByIdOnTheBegging boss开始时策略\r\n     * @effect1_5 1：子弹 2：急冻（减速）怪 3：移速++  4:朝向目标方向快速冲刺，10s后消失\r\n     * @effect\r\n     * */\r\n    setMonsterStrategyByIdOnTheBegging() {\r\n        for (const id of this._curMonsterData.effects) {\r\n            switch (id) {\r\n                case 1:\r\n                    this.setBulletMonsterStrategy();//怪 释放子弹\r\n                    break;\r\n                case 2:\r\n                    this.setFrozenStrategy();//怪 急冻（减速玩家）\r\n                    break;\r\n                case 3:\r\n                    this.setSpeedMonsterStrategy();//怪 移速提升\r\n                    break;\r\n                case 4:\r\n                    this.fastMoveToHeroCurPos();//怪 移速提升\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    //设置子弹怪的策略 \r\n    setBulletMonsterStrategy() {\r\n        let probability = Math.ceil(this._monsterId / 6);\r\n        if (Math.random() < probability * 0.2) {\r\n            let color = new Color(255, 0, 0, 255);\r\n            this.shotOnce(color);\r\n        }\r\n    }\r\n    setFrozenStrategy() {\r\n        this._effectList.frozen = true;\r\n        this._defaultMaterial = this.effect_frozen;\r\n        this._parKey = \"effect_frozen\"\r\n        this.switchParByType(this._parKey);\r\n        this.recoveryDefaultMaterial();\r\n    }\r\n    // 设置移速怪策略\r\n    setSpeedMonsterStrategy() {\r\n        // 设置移速怪\r\n        let times = Math.ceil(this._monsterId / 6) * 0.5 + 1.5;\r\n        this._speedMonsterSpeedTimes = times;\r\n    }\r\n    /**\r\n     * @description 快速冲向玩家当前位置 存活时间为15s 短时间内 冲向一个方向 关闭sid\r\n     * */\r\n    fastMoveToHeroCurPos() {\r\n        console.log(\"快速冲向玩家\");\r\n    }\r\n    //boss死亡后的策略\r\n    setMonsterStrategyByIdOnTheBeggingAfterDied() {\r\n\r\n    }\r\n    // 攻击 仅攻击一次\r\n    shotOnce(color) {\r\n        let bullet = plm.getFromPool(\"monsterBullet\");\r\n        bullet.getComponent(Sprite).color = color;\r\n        let flyDir = this.getDirToHero();\r\n        bullet.parent = find(\"Canvas/bulletLayer\");\r\n        let wp = this.node.getWorldPosition();\r\n        bullet.active = true;\r\n        bullet.setWorldPosition(wp);\r\n        this._bulletData.damage = this._curMonsterData.damage;\r\n        bullet.getComponent(\"EnemySkill\").init(this._bulletData, flyDir, 0.5);\r\n    }\r\n    // 获取朝向hero的方向\r\n    getDirToHero() {\r\n        let nwp = this.node.getWorldPosition();\r\n        let hwp = em.dispatch(\"getHeroWorldPos\");\r\n        let x = hwp.x - nwp.x;\r\n        let y = hwp.y - nwp.y;\r\n        let dir = {\r\n            x: 0,\r\n            y: 0\r\n        }\r\n        let offset = {\r\n            x: x,\r\n            y: y\r\n        }\r\n        if (offset.x == 0) {\r\n            dir.x = 0;\r\n            dir.y = Math.abs(offset.y) / offset.y;\r\n        } else if (offset.y == 0) {\r\n            dir.x = Math.abs(offset.x) / offset.x;\r\n            dir.y = 0;\r\n        } else {\r\n            let rate = Math.abs(offset.x / offset.y);\r\n            if (rate >= 1) {\r\n                dir.x = Math.abs(offset.x) / offset.x;\r\n                dir.y = 1 / rate * Math.abs(offset.y) / offset.y;\r\n            } else {\r\n                dir.x = rate * Math.abs(offset.x) / offset.x;\r\n                dir.y = Math.abs(offset.y) / offset.y;\r\n            };\r\n        };\r\n        return new Vec2(dir.x, dir.y);\r\n    }\r\n    // 恢复函数\r\n    initDefaultData() {\r\n        // console.log(\"initDefaultData\");\r\n        this._effectList = {\r\n            \"fast\": false,//加速\r\n            \"frozen\": false,//冻结\r\n        }\r\n        this._debuffList = {\r\n            \"timid\": {\r\n                \"state\": false,\r\n                \"duration\": 0,\r\n                \"damage\": 0.5,\r\n                \"moveSpeed\": 0.5\r\n            },\r\n            \"frozen\": {\r\n                \"state\": false,\r\n                \"duration\": 0,\r\n            },\r\n            \"paralysis\": {\r\n                \"state\": false,\r\n                \"duration\": 0,\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\n"]}