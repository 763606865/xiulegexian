{"version":3,"sources":["file:///C:/Users/Administrator/Desktop/TSGFDemo/Demo/%E4%BF%AE%E4%BA%86%E4%B8%AA%E4%BB%99/assets/script/mainMenu/MergeEquLayer.ts"],"names":["_decorator","Component","Node","Label","Sprite","SpriteFrame","RichText","em","glf","plm","ccclass","property","MergeEquLayer","_itemPrefabArr","_mergeList","onLoad","createButton","node","curSelect","target","onEnable","updateEquList","onDisable","data","mergeDetailLabel","string","totalLabel","length","prefab","shift","putToPool","list","dispatch","key","type","total","getFromPool","parent","itemContent","getChildByName","getComponent","spriteFrame","itemQBg","quality","initPrefabLv","sprite","loadUrl","assets","itemName","name","push","onBtnItemInMergeLayer","e","p","data2","getMergeTargetData","console","log","lv","showMergeDetail","onBtnMerge","curTotal","getCurEquTotal","needTotal","consumeEqu","gets","curName","index","indexOf","lvArr","slice","pre","targetName","label","onBtnEqu","colorStr","getColorStrByQuality","maskPar","description","showEquDetail","active","getColorStrByType","equName","effects","qData","effect","id","lData","baseDamage","damageTimes","attackInterval","blood","CHR","moveSpeed","onBtnOpen","onBtnClose"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,Q,OAAAA,Q;;AACzDC,MAAAA,E,iBAAAA,E;;AACAC,MAAAA,G,iBAAAA,G;;AACAC,MAAAA,G,iBAAAA,G;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBX,U;;+BAGjBY,a,WADZF,OAAO,CAAC,eAAD,C,UAEHC,QAAQ,CAACT,IAAD,C,UAERS,QAAQ,CAACT,IAAD,C,UAERS,QAAQ,CAACT,IAAD,C,UAERS,QAAQ,CAACR,KAAD,C,UAERQ,QAAQ,CAACR,KAAD,C,UAERQ,QAAQ,CAACT,IAAD,C,UAERS,QAAQ,CAAC,CAACN,WAAD,CAAD,C,2BAdb,MACaO,aADb,SACmCX,SADnC,CAC6C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAgBzCY,cAhByC,GAgBxB,EAhBwB;AAAA,eAiBzCC,UAjByC,GAiB5B;AACT,iBAAK,CADI;AAET,iBAAK,EAFI;AAGT,iBAAK,EAHI;AAIT,iBAAK,CAJI;AAKT,iBAAK;AALI,WAjB4B;AAAA;;AAwBzCC,QAAAA,MAAM,GAAG;AACL;AAAA;AAAA,0BAAIC,YAAJ,CAAiB,KAAKC,IAAtB,EAA4B,KAAKC,SAAjC,EAA4C,eAA5C,EAA6D,UAA7D;AACA;AAAA;AAAA,0BAAIF,YAAJ,CAAiB,KAAKC,IAAtB,EAA4B,KAAKE,MAAjC,EAAyC,eAAzC,EAA0D,UAA1D;AACH;;AACDC,QAAAA,QAAQ,GAAG;AACP,eAAKC,aAAL;AACH;;AACDC,QAAAA,SAAS,GAAG;AACR,eAAKJ,SAAL,CAAeK,IAAf,GAAsB,IAAtB;AACA,eAAKJ,MAAL,CAAYI,IAAZ,GAAmB,IAAnB;AACA,eAAKC,gBAAL,CAAsBC,MAAtB,GAA+B,EAA/B;AACA,eAAKC,UAAL,CAAgBD,MAAhB,GAAyB,EAAzB;AACH;;AACDJ,QAAAA,aAAa,GAAG;AACZ,iBAAO,KAAKR,cAAL,CAAoBc,MAApB,GAA6B,CAApC,EAAuC;AACnC,gBAAIC,MAAM,GAAG,KAAKf,cAAL,CAAoBgB,KAApB,EAAb;;AACA;AAAA;AAAA,4BAAIC,SAAJ,CAAc,eAAd,EAA+BF,MAA/B;AACH;;AACD,cAAIG,IAAI,GAAG;AAAA;AAAA,wBAAGC,QAAH,CAAY,aAAZ,CAAX;;AACA,eAAK,MAAMC,GAAX,IAAkBF,IAAlB,EAAwB;AACpB,gBAAIR,IAAI,GAAG;AAAA;AAAA,0BAAGS,QAAH,CAAY,uBAAZ,EAAqCC,GAArC,CAAX;;AACA,gBAAIV,IAAI,CAACW,IAAL,IAAa,IAAjB,EAAuB;AACnB,kBAAIC,KAAK,GAAGJ,IAAI,CAACE,GAAD,CAAhB;AACA,kBAAIL,MAAM,GAAG;AAAA;AAAA,8BAAIQ,WAAJ,CAAgB,eAAhB,CAAb;AACAR,cAAAA,MAAM,CAACS,MAAP,GAAgB,KAAKC,WAArB;AACAV,cAAAA,MAAM,CAACW,cAAP,CAAsB,QAAtB,EAAgCC,YAAhC,CAA6CpC,MAA7C,EAAqDqC,WAArD,GAAmE,KAAKC,OAAL,CAAanB,IAAI,CAACoB,OAAL,GAAe,CAA5B,CAAnE;AACA,mBAAKC,YAAL,CAAkBhB,MAAlB,EAA0BL,IAA1B;AACA,kBAAIsB,MAAM,GAAGjB,MAAM,CAACW,cAAP,CAAsB,QAAtB,EAAgCC,YAAhC,CAA6CpC,MAA7C,CAAb;AACA,kBAAI0C,OAAe,GAAGvB,IAAI,CAACuB,OAA3B;AACA,kBAAI,CAACvB,IAAI,CAACuB,OAAV,EAAmBA,OAAO,GAAG,cAAV;AACnBA,cAAAA,OAAO,GAAG,kBAAkBA,OAAlB,GAA4B,cAAtC;AACA;AAAA;AAAA,4BAAGd,QAAH,CAAY,qBAAZ,EAAmCc,OAAnC,EAA6CC,MAAD,IAAYF,MAAM,CAACJ,WAAP,GAAqBM,MAA7E,EAAqF,MAAM;AACvF;AAAA;AAAA,8BAAGf,QAAH,CAAY,qBAAZ,EAAmC,uCAAnC,EAA6Ee,MAAD,IAAYF,MAAM,CAACJ,WAAP,GAAqBM,MAA7G;AACH,eAFD,EAVmB,CAanB;;AACAnB,cAAAA,MAAM,CAACW,cAAP,CAAsB,OAAtB,EAA+BC,YAA/B,CAA4CrC,KAA5C,EAAmDsB,MAAnD,GAA4DU,KAA5D,CAdmB,CAenB;;AACAP,cAAAA,MAAM,CAACoB,QAAP,GAAkBzB,IAAI,CAAC0B,IAAvB,CAhBmB,CAgBS;;AAC5B,mBAAKpC,cAAL,CAAoBqC,IAApB,CAAyBtB,MAAzB;;AACA;AAAA;AAAA,8BAAIZ,YAAJ,CAAiB,KAAKC,IAAtB,EAA4BW,MAAM,CAACW,cAAP,CAAsB,QAAtB,CAA5B,EAA6D,eAA7D,EAA8E,uBAA9E,EAAuGN,GAAvG;AACH;AACJ;AACJ,SAlEwC,CAmEzC;;;AACAkB,QAAAA,qBAAqB,CAACC,CAAD,EAAIC,CAAJ,EAAO;AACxB,cAAI9B,IAAI,GAAG;AAAA;AAAA,wBAAGS,QAAH,CAAY,uBAAZ,EAAqCqB,CAArC,CAAX;;AACA,cAAI9B,IAAI,CAACoB,OAAL,IAAgB,CAApB,EAAuB;AACnB;AAAA;AAAA,0BAAGX,QAAH,CAAY,cAAZ,EAA4B,gBAA5B;AACA;AACH;;AACD,cAAIsB,KAAK,GAAG,KAAKC,kBAAL,CAAwBhC,IAAI,CAAC0B,IAA7B,CAAZ;AACAO,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBlC,IAAtB;AACAiC,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,KAAtB;AACA,eAAKpC,SAAL,CAAesB,YAAf,CAA4BpC,MAA5B,EAAoCqC,WAApC,GAAkD,KAAKC,OAAL,CAAanB,IAAI,CAACoB,OAAL,GAAe,CAA5B,CAAlD;AACA,eAAKxB,MAAL,CAAYqB,YAAZ,CAAyBpC,MAAzB,EAAiCqC,WAAjC,GAA+C,KAAKC,OAAL,CAAaY,KAAK,CAACX,OAAN,GAAgB,CAA7B,CAA/C;AACA,eAAKzB,SAAL,CAAeK,IAAf,GAAsBA,IAAtB;AACA,eAAKJ,MAAL,CAAYI,IAAZ,GAAmB+B,KAAnB,CAZwB,CAaxB;;AACA,cAAIR,OAAe,GAAGvB,IAAI,CAACuB,OAA3B;AACA,cAAI,CAACvB,IAAI,CAACuB,OAAV,EAAmBA,OAAO,GAAG,cAAV;AACnBA,UAAAA,OAAO,GAAG,kBAAkBA,OAAlB,GAA4B,cAAtC;AACA;AAAA;AAAA,wBAAGd,QAAH,CAAY,qBAAZ,EAAmCc,OAAnC,EAA6CC,MAAD,IAAY;AACpD,iBAAK7B,SAAL,CAAeqB,cAAf,CAA8B,QAA9B,EAAwCC,YAAxC,CAAqDpC,MAArD,EAA6DqC,WAA7D,GAA2EM,MAA3E;AACA,iBAAK5B,MAAL,CAAYoB,cAAZ,CAA2B,QAA3B,EAAqCC,YAArC,CAAkDpC,MAAlD,EAA0DqC,WAA1D,GAAwEM,MAAxE;AACH,WAHD,EAGG,MAAM;AACL;AAAA;AAAA,0BAAGf,QAAH,CAAY,qBAAZ,EAAmC,uCAAnC,EAA6Ee,MAAD,IAAY;AACpF,mBAAK7B,SAAL,CAAeqB,cAAf,CAA8B,QAA9B,EAAwCC,YAAxC,CAAqDpC,MAArD,EAA6DqC,WAA7D,GAA2EM,MAA3E;AACA,mBAAK5B,MAAL,CAAYoB,cAAZ,CAA2B,QAA3B,EAAqCC,YAArC,CAAkDpC,MAAlD,EAA0DqC,WAA1D,GAAwEM,MAAxE;AACH,aAHD;AAIH,WARD,EAjBwB,CA0BxB;;AACA,cAAIhB,IAAI,GAAG;AAAE,eAAG,IAAL;AAAW,eAAG,IAAd;AAAoB,eAAG,IAAvB;AAA6B,eAAG,IAAhC;AAAsC,eAAG,IAAzC;AAA+C,eAAG,IAAlD;AAAwD,eAAG,IAA3D;AAAiE,eAAG,IAApE;AAA0E,eAAG;AAA7E,WAAX,CA3BwB,CA4BxB;;AACA,eAAKb,SAAL,CAAeqB,cAAf,CAA8B,OAA9B,EAAuCC,YAAvC,CAAoDrC,KAApD,EAA2DsB,MAA3D,GAAoE,EAApE;AACA,eAAKN,MAAL,CAAYoB,cAAZ,CAA2B,OAA3B,EAAoCC,YAApC,CAAiDrC,KAAjD,EAAwDsB,MAAxD,GAAiEM,IAAI,CAACR,IAAI,CAACmC,EAAN,CAArE;AACA,eAAKhC,UAAL,CAAgBD,MAAhB,GAAyB,MAAM,KAAKX,UAAL,CAAgBS,IAAI,CAACoB,OAArB,CAA/B;AACA,eAAKgB,eAAL,CAAqBpC,IAAI,CAAC0B,IAA1B;AACH,SArGwC,CAsGzC;;;AACAW,QAAAA,UAAU,GAAG;AACT;AACA,cAAIC,QAAQ,GAAG,KAAKC,cAAL,CAAoB,KAAK5C,SAAL,CAAeK,IAAf,CAAoB0B,IAAxC,CAAf;AACA,cAAIc,SAAS,GAAG,KAAKjD,UAAL,CAAgB,KAAKI,SAAL,CAAeK,IAAf,CAAoBmC,EAApC,CAAhB;;AACA,cAAIG,QAAQ,IAAIE,SAAhB,EAA2B;AACvBP,YAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,iBAAKO,UAAL,CAAgB,KAAK9C,SAAL,CAAeK,IAAf,CAAoB0B,IAApC,EAA0Cc,SAA1C;AACA;AAAA;AAAA,0BAAG/B,QAAH,CAAY,aAAZ,EAA2B,KAAKb,MAAL,CAAYI,IAAZ,CAAiB0B,IAA5C,EAAkD,CAAlD;AACA,gBAAIgB,IAAI,GAAG,EAAX;AACAA,YAAAA,IAAI,CAAC,KAAK9C,MAAL,CAAYI,IAAZ,CAAiB0B,IAAlB,CAAJ,GAA8B,CAA9B;AACA;AAAA;AAAA,0BAAGjB,QAAH,CAAY,UAAZ,EAAwBiC,IAAxB;AACA,iBAAK5C,aAAL;AACA,iBAAKsC,eAAL,CAAqB,KAAKzC,SAAL,CAAeK,IAAf,CAAoB0B,IAAzC;AACH,WATD,MASO;AACH;AAAA;AAAA,0BAAGjB,QAAH,CAAY,cAAZ,EAA4B,aAA5B;AACH;AACJ;;AACDgC,QAAAA,UAAU,CAACE,OAAD,EAAUH,SAAV,EAAqB;AAC3B,cAAII,KAAK,GAAGD,OAAO,CAACE,OAAR,CAAgB,GAAhB,CAAZ;AACA,cAAIC,KAAK,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,MAAzC,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,MAAjE,CAAZ;;AACA,eAAK,MAAMX,EAAX,IAAiBW,KAAjB,EAAwB;AACpB,gBAAIpB,IAAI,GAAGiB,OAAO,CAACI,KAAR,CAAc,CAAd,EAAiBH,KAAjB,IAA0BT,EAArC;AACA,gBAAIvB,KAAK,GAAG;AAAA;AAAA,0BAAGH,QAAH,CAAY,wBAAZ,EAAsCiB,IAAtC,CAAZ;;AACA,gBAAId,KAAK,GAAG,CAAZ,EAAe;AACX,kBAAI4B,SAAS,IAAI5B,KAAjB,EAAwB;AACpB;AAAA;AAAA,8BAAGH,QAAH,CAAY,kBAAZ,EAAgCiB,IAAhC,EAAsCc,SAAtC;AACA;AACH,eAHD,MAGO;AACHA,gBAAAA,SAAS,IAAI5B,KAAb;AACA;AAAA;AAAA,8BAAGH,QAAH,CAAY,kBAAZ,EAAgCiB,IAAhC,EAAsCd,KAAtC;AACH;AACJ;AACJ;;AACDqB,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH,SAzIwC,CA0IzC;;;AACAE,QAAAA,eAAe,CAACO,OAAD,EAAU;AACrB,cAAIC,KAAK,GAAGD,OAAO,CAACE,OAAR,CAAgB,GAAhB,CAAZ;AACA,cAAIC,KAAK,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,MAAzC,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,MAAjE,CAAZ;AACA,cAAI5C,MAAM,GAAG,EAAb;;AACA,eAAK,MAAMiC,EAAX,IAAiBW,KAAjB,EAAwB;AACpB,gBAAIpB,IAAI,GAAGiB,OAAO,CAACI,KAAR,CAAc,CAAd,EAAiBH,KAAjB,IAA0BT,EAArC;AACA,gBAAIvB,KAAK,GAAG;AAAA;AAAA,0BAAGH,QAAH,CAAY,wBAAZ,EAAsCiB,IAAtC,CAAZ;AACA,gBAAId,KAAK,GAAG,CAAZ,EAAeV,MAAM,GAAGA,MAAM,GAAGwB,IAAT,GAAgB,GAAhB,GAAsBd,KAAtB,GAA8B,IAAvC;AAClB;;AACD,eAAKX,gBAAL,CAAsBC,MAAtB,GAA+BA,MAA/B;AACH,SArJwC,CAsJzC;;;AACAqC,QAAAA,cAAc,CAACI,OAAD,EAAU;AACpB,cAAIC,KAAK,GAAGD,OAAO,CAACE,OAAR,CAAgB,GAAhB,CAAZ;AACA,cAAIC,KAAK,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,MAAzC,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,MAAjE,CAAZ;AACA,cAAIlC,KAAK,GAAG,CAAZ;;AACA,eAAK,MAAMuB,EAAX,IAAiBW,KAAjB,EAAwB;AACpB,gBAAIpB,IAAI,GAAGiB,OAAO,CAACI,KAAR,CAAc,CAAd,EAAiBH,KAAjB,IAA0BT,EAArC;AACAvB,YAAAA,KAAK,IAAI;AAAA;AAAA,0BAAGH,QAAH,CAAY,wBAAZ,EAAsCiB,IAAtC,CAAT;AACH;;AACD,iBAAOd,KAAP;AACH,SAhKwC,CAiKzC;;;AACAoB,QAAAA,kBAAkB,CAACW,OAAD,EAAU;AACxB,cAAInC,IAAI,GAAG;AAAE,kBAAM,IAAR;AAAc,kBAAM,IAApB;AAA0B,kBAAM,IAAhC;AAAsC,kBAAM;AAA5C,WAAX;AACAyB,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBS,OAAvB;AACAV,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCS,OAAO,CAACI,KAAR,CAAc,CAAd,EAAiB,CAAjB,CAAlC;AACAd,UAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwC1B,IAAI,CAACmC,OAAO,CAACI,KAAR,CAAc,CAAd,EAAiB,CAAjB,CAAD,CAA5C;AAEA,cAAIC,GAAG,GAAGxC,IAAI,CAACmC,OAAO,CAACI,KAAR,CAAc,CAAd,EAAiB,CAAjB,CAAD,CAAd;AAEA,cAAI,CAACC,GAAL,EAAU,MAAM,uBAAN;AACV,cAAIC,UAAU,GAAGD,GAAG,GAAGL,OAAO,CAACI,KAAR,CAAc,CAAd,CAAvB;AACA,iBAAO;AAAA;AAAA,wBAAGtC,QAAH,CAAY,uBAAZ,EAAqCwC,UAArC,CAAP;AACH,SA7KwC,CA8KzC;;;AACA5B,QAAAA,YAAY,CAAChB,MAAD,EAASL,IAAT,EAAe;AACvB,cAAIkD,KAAK,GAAG7C,MAAM,CAACW,cAAP,CAAsB,IAAtB,EAA4BC,YAA5B,CAAyCrC,KAAzC,CAAZ;;AACA,cAAIoB,IAAI,CAACW,IAAL,IAAa,IAAb,IAAqBX,IAAI,CAACmC,EAA9B,EAAkC;AAC9B,gBAAI3B,IAAI,GAAG;AAAE,iBAAG,IAAL;AAAW,iBAAG,IAAd;AAAoB,iBAAG,IAAvB;AAA6B,iBAAG,IAAhC;AAAsC,iBAAG,IAAzC;AAA+C,iBAAG,IAAlD;AAAwD,iBAAG,IAA3D;AAAiE,iBAAG,IAApE;AAA0E,iBAAG;AAA7E,aAAX;AACA0C,YAAAA,KAAK,CAAChD,MAAN,GAAeM,IAAI,CAACR,IAAI,CAACmC,EAAN,CAAnB;AACH,WAHD,MAGOe,KAAK,CAAChD,MAAN,GAAe,EAAf;AACV;;AACDiD,QAAAA,QAAQ,CAACtB,CAAD,EAAI;AACR,cAAI7B,IAAI,GAAG6B,CAAC,CAACjC,MAAF,CAASI,IAApB;AACA,cAAI,CAACA,IAAL,EAAW;AACX,cAAIoD,QAAQ,GAAG,KAAKC,oBAAL,CAA0BrD,IAAI,CAACoB,OAAL,GAAe,CAAzC,CAAf;AACA,eAAKkC,OAAL,CAAatC,cAAb,CAA4B,MAA5B,EAAoCC,YAApC,CAAiDlC,QAAjD,EAA2DmB,MAA3D,GAAoEkD,QAAQ,GAAGpD,IAAI,CAAC0B,IAAhB,GAAuB,UAA3F;AACA,eAAK4B,OAAL,CAAatC,cAAb,CAA4B,aAA5B,EAA2CC,YAA3C,CAAwDlC,QAAxD,EAAkEmB,MAAlE,GAA2EF,IAAI,CAACuD,WAAhF;AACAtB,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBlC,IAAxB;AACA,eAAKwD,aAAL,CAAmBxD,IAAI,CAAC0B,IAAxB;AACA,eAAK4B,OAAL,CAAaG,MAAb,GAAsB,IAAtB;AACH,SA/LwC,CAgMzC;;;AACAC,QAAAA,iBAAiB,CAACd,KAAD,EAAQ;AACrBA,UAAAA,KAAK,GAAG,CAAR,GAAY,CAAZ,GAAgBA,KAAhB;AACA,iBAAO,CAAC,iBAAD,EAAoB,iBAApB,EAAuC,iBAAvC,EAA0DA,KAA1D,CAAP;AACH;;AACDS,QAAAA,oBAAoB,CAACT,KAAD,EAAQ;AACxBA,UAAAA,KAAK,GAAG,CAAR,GAAY,CAAZ,GAAgBA,KAAhB;AACA,iBAAO,CAAC,iBAAD,EAAoB,iBAApB,EAAuC,iBAAvC,EAA0D,iBAA1D,EAA6E,iBAA7E,EAAgGA,KAAhG,CAAP,CAFwB,CAGxB;AACH;;AACDY,QAAAA,aAAa,CAACG,OAAD,EAAU;AACnB,cAAI3D,IAAI,GAAG;AAAA;AAAA,wBAAGS,QAAH,CAAY,0BAAZ,EAAwC,kBAAxC,EAA4DkD,OAA5D,CAAX;AACA,cAAIC,OAAO,GAAG5D,IAAI,CAAC6D,KAAL,CAAWC,MAAzB,CAFmB,CAGnB;;AACA,cAAI5D,MAAM,GAAG,EAAb;;AACA,eAAK,MAAM6D,EAAX,IAAiBH,OAAjB,EAA0B;AACtB,gBAAIE,MAAM,GAAG;AAAA;AAAA,0BAAGrD,QAAH,CAAY,0BAAZ,EAAwC,kBAAxC,EAA4DsD,EAA5D,CAAb;AACA9B,YAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB4B,MAAtB,EAFsB,CAGtB;;AACA,gBAAIV,QAAQ,GAAG,KAAKM,iBAAL,CAAuBI,MAAM,CAACnD,IAAP,GAAc,CAArC,CAAf;AACAT,YAAAA,MAAM,GAAGA,MAAM,GAAGkD,QAAT,GAAoBU,MAAM,CAACpC,IAA3B,GAAkC,GAAlC,GAAwCoC,MAAM,CAACP,WAA/C,GAA6D,YAAtE;AACH;;AACD,cAAIvD,IAAI,CAACgE,KAAL,CAAWC,UAAf,EAA2B/D,MAAM,GAAGA,MAAM,GAAG,QAAT,GAAoBF,IAAI,CAACgE,KAAL,CAAWC,UAA/B,GAA4C,IAArD;AAC3B,cAAIjE,IAAI,CAACgE,KAAL,CAAWE,WAAf,EAA4BhE,MAAM,GAAGA,MAAM,GAAG,UAAT,GAAsBF,IAAI,CAACgE,KAAL,CAAWE,WAAjC,GAA+C,IAAxD;AAC5B,cAAIlE,IAAI,CAACgE,KAAL,CAAWG,cAAf,EAA+BjE,MAAM,GAAGA,MAAM,GAAG,OAAT,GAAmBF,IAAI,CAACgE,KAAL,CAAWG,cAA9B,GAA+C,IAAxD;AAC/B,cAAInE,IAAI,CAACgE,KAAL,CAAWI,KAAf,EAAsBlE,MAAM,GAAGA,MAAM,GAAG,MAAT,GAAkBF,IAAI,CAACgE,KAAL,CAAWI,KAA7B,GAAqC,IAA9C;AACtB,cAAIpE,IAAI,CAACgE,KAAL,CAAWK,GAAf,EAAoBnE,MAAM,GAAGA,MAAM,GAAG,OAAT,GAAmBF,IAAI,CAACgE,KAAL,CAAWK,GAA9B,GAAoC,IAA7C;AACpB,cAAIrE,IAAI,CAACgE,KAAL,CAAWM,SAAf,EAA0BpE,MAAM,GAAGA,MAAM,GAAG,QAAT,GAAoBF,IAAI,CAACgE,KAAL,CAAWM,SAA/B,GAA2C,IAApD;AAC1B,eAAKhB,OAAL,CAAatC,cAAb,CAA4B,aAA5B,EAA2CC,YAA3C,CAAwDlC,QAAxD,EAAkEmB,MAAlE,GAA2EA,MAA3E;AACH;;AACDqE,QAAAA,SAAS,GAAG;AACR,eAAK7E,IAAL,CAAU+D,MAAV,GAAmB,IAAnB;AACH;;AACDe,QAAAA,UAAU,GAAG;AACT;AAAA;AAAA,wBAAG/D,QAAH,CAAY,uBAAZ,EAAqC,oBAArC;AACA,eAAKf,IAAL,CAAU+D,MAAV,GAAmB,KAAnB;AACH;;AApOwC,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iBAchB,E","sourcesContent":["import { _decorator, Component, Node, Label, Sprite, SpriteFrame, RichText } from 'cc';\r\nimport { em } from '../global/EventManager';\r\nimport { glf } from '../global/globalFun';\r\nimport { plm } from '../global/PoolManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('MergeEquLayer')\r\nexport class MergeEquLayer extends Component {\r\n    @property(Node)\r\n    itemContent;\r\n    @property(Node)\r\n    curSelect;\r\n    @property(Node)\r\n    target;\r\n    @property(Label)\r\n    totalLabel;\r\n    @property(Label)\r\n    mergeDetailLabel;\r\n    @property(Node)\r\n    maskPar;\r\n    @property([SpriteFrame])\r\n    itemQBg: SpriteFrame[] = [];\r\n\r\n    _itemPrefabArr = [];\r\n    _mergeList = {\r\n        \"1\": 5,\r\n        \"2\": 10,\r\n        \"3\": 10,\r\n        \"4\": 5,\r\n        \"5\": 0\r\n    };\r\n    onLoad() {\r\n        glf.createButton(this.node, this.curSelect, \"MergeEquLayer\", \"onBtnEqu\");\r\n        glf.createButton(this.node, this.target, \"MergeEquLayer\", \"onBtnEqu\");\r\n    }\r\n    onEnable() {\r\n        this.updateEquList();\r\n    }\r\n    onDisable() {\r\n        this.curSelect.data = null;\r\n        this.target.data = null;\r\n        this.mergeDetailLabel.string = \"\";\r\n        this.totalLabel.string = \"\";\r\n    }\r\n    updateEquList() {\r\n        while (this._itemPrefabArr.length > 0) {\r\n            let prefab = this._itemPrefabArr.shift();\r\n            plm.putToPool(\"SSLItemPrefab\", prefab);\r\n        }\r\n        let list = em.dispatch(\"getItemList\");\r\n        for (const key in list) {\r\n            let data = em.dispatch(\"getItemDataByIdOrName\", key);\r\n            if (data.type == \"装备\") {\r\n                let total = list[key];\r\n                let prefab = plm.getFromPool(\"SSLItemPrefab\");\r\n                prefab.parent = this.itemContent;\r\n                prefab.getChildByName(\"itemBg\").getComponent(Sprite).spriteFrame = this.itemQBg[data.quality - 1];\r\n                this.initPrefabLv(prefab, data);\r\n                let sprite = prefab.getChildByName(\"sprite\").getComponent(Sprite);\r\n                let loadUrl: string = data.loadUrl;\r\n                if (!data.loadUrl) loadUrl = \"item_default\";\r\n                loadUrl = \"images/items/\" + loadUrl + \"/spriteFrame\";\r\n                em.dispatch(\"loadTheDirResources\", loadUrl, (assets) => sprite.spriteFrame = assets, () => {\r\n                    em.dispatch(\"loadTheDirResources\", \"images/items/item_default/spriteFrame\", (assets) => sprite.spriteFrame = assets);\r\n                });\r\n                // prefab.getChildByName(\"total\").getComponent(Label).string = \"X\" + total;\r\n                prefab.getChildByName(\"total\").getComponent(Label).string = total;\r\n                // prefab.getChildByName(\"name\").getComponent(Label).string = data.name;\r\n                prefab.itemName = data.name;//用于索引\r\n                this._itemPrefabArr.push(prefab);\r\n                glf.createButton(this.node, prefab.getChildByName(\"itemBg\"), \"MergeEquLayer\", \"onBtnItemInMergeLayer\", key);\r\n            }\r\n        }\r\n    }\r\n    // 合成\r\n    onBtnItemInMergeLayer(e, p) {\r\n        let data = em.dispatch(\"getItemDataByIdOrName\", p);\r\n        if (data.quality >= 5) {\r\n            em.dispatch(\"tipsViewShow\", \"当前品质为最高品质，不可提升\");\r\n            return;\r\n        }\r\n        let data2 = this.getMergeTargetData(data.name);\r\n        console.log(\"merge1\", data);\r\n        console.log(\"merge2\", data2);\r\n        this.curSelect.getComponent(Sprite).spriteFrame = this.itemQBg[data.quality - 1];\r\n        this.target.getComponent(Sprite).spriteFrame = this.itemQBg[data2.quality - 1];\r\n        this.curSelect.data = data;\r\n        this.target.data = data2;\r\n        // 初始化物品图片\r\n        let loadUrl: string = data.loadUrl;\r\n        if (!data.loadUrl) loadUrl = \"item_default\";\r\n        loadUrl = \"images/items/\" + loadUrl + \"/spriteFrame\";\r\n        em.dispatch(\"loadTheDirResources\", loadUrl, (assets) => {\r\n            this.curSelect.getChildByName(\"Sprite\").getComponent(Sprite).spriteFrame = assets;\r\n            this.target.getChildByName(\"Sprite\").getComponent(Sprite).spriteFrame = assets;\r\n        }, () => {\r\n            em.dispatch(\"loadTheDirResources\", \"images/items/item_default/spriteFrame\", (assets) => {\r\n                this.curSelect.getChildByName(\"Sprite\").getComponent(Sprite).spriteFrame = assets;\r\n                this.target.getChildByName(\"Sprite\").getComponent(Sprite).spriteFrame = assets;\r\n            });\r\n        });\r\n        //初始化阶\r\n        let list = { 1: \"一阶\", 2: \"二阶\", 3: \"三阶\", 4: \"四阶\", 5: \"五阶\", 6: \"六阶\", 7: \"七阶\", 8: \"八阶\", 9: \"九阶\" };\r\n        // this.curSelect.getChildByName(\"Label\").getComponent(Label).string = list[data.lv];\r\n        this.curSelect.getChildByName(\"Label\").getComponent(Label).string = \"\";\r\n        this.target.getChildByName(\"Label\").getComponent(Label).string = list[data.lv];\r\n        this.totalLabel.string = \"x\" + this._mergeList[data.quality];\r\n        this.showMergeDetail(data.name);\r\n    }\r\n    // 合成装备\r\n    onBtnMerge() {\r\n        //判断材料是否足够\r\n        let curTotal = this.getCurEquTotal(this.curSelect.data.name);\r\n        let needTotal = this._mergeList[this.curSelect.data.lv];\r\n        if (curTotal >= needTotal) {\r\n            console.log(\"合成\");\r\n            this.consumeEqu(this.curSelect.data.name, needTotal);\r\n            em.dispatch(\"addItemToSS\", this.target.data.name, 1);\r\n            let gets = {};\r\n            gets[this.target.data.name] = 1;\r\n            em.dispatch(\"showGets\", gets);\r\n            this.updateEquList();\r\n            this.showMergeDetail(this.curSelect.data.name);\r\n        } else {\r\n            em.dispatch(\"tipsViewShow\", \"升品失败，材料数量不足\");\r\n        }\r\n    }\r\n    consumeEqu(curName, needTotal) {\r\n        let index = curName.indexOf(\"（\");\r\n        let lvArr = [\"（一阶）\", \"（二阶）\", \"（三阶）\", \"（四阶）\", \"（五阶）\", \"（六阶）\", \"（七阶）\", \"（八阶）\", \"（九阶）\"];\r\n        for (const lv of lvArr) {\r\n            let name = curName.slice(0, index) + lv;\r\n            let total = em.dispatch(\"getItemTotalByIdOrName\", name);\r\n            if (total > 0) {\r\n                if (needTotal <= total) {\r\n                    em.dispatch(\"reduceItemFromSS\", name, needTotal);\r\n                    break;\r\n                } else {\r\n                    needTotal -= total;\r\n                    em.dispatch(\"reduceItemFromSS\", name, total);\r\n                }\r\n            }\r\n        }\r\n        console.log(\"消耗完成\");\r\n    }\r\n    // 展示合成详情\r\n    showMergeDetail(curName) {\r\n        let index = curName.indexOf(\"（\");\r\n        let lvArr = [\"（一阶）\", \"（二阶）\", \"（三阶）\", \"（四阶）\", \"（五阶）\", \"（六阶）\", \"（七阶）\", \"（八阶）\", \"（九阶）\"];\r\n        let string = \"\";\r\n        for (const lv of lvArr) {\r\n            let name = curName.slice(0, index) + lv;\r\n            let total = em.dispatch(\"getItemTotalByIdOrName\", name);\r\n            if (total > 0) string = string + name + \"x\" + total + \"\\n\";\r\n        }\r\n        this.mergeDetailLabel.string = string;\r\n    }\r\n    //获取某装备总数\r\n    getCurEquTotal(curName) {\r\n        let index = curName.indexOf(\"（\");\r\n        let lvArr = [\"（一阶）\", \"（二阶）\", \"（三阶）\", \"（四阶）\", \"（五阶）\", \"（六阶）\", \"（七阶）\", \"（八阶）\", \"（九阶）\"];\r\n        let total = 0;\r\n        for (const lv of lvArr) {\r\n            let name = curName.slice(0, index) + lv;\r\n            total += em.dispatch(\"getItemTotalByIdOrName\", name);\r\n        }\r\n        return total;\r\n    }\r\n    // 获得合成目标数据\r\n    getMergeTargetData(curName) {\r\n        let list = { \"破旧\": \"实用\", \"实用\": \"稀有\", \"稀有\": \"传说\", \"传说\": \"史诗\" };\r\n        console.log(\"curName\", curName);\r\n        console.log(\"curName.slice(0,2)\", curName.slice(0, 2));\r\n        console.log(\"list[curName.slice(0,2)]\", list[curName.slice(0, 2)]);\r\n\r\n        let pre = list[curName.slice(0, 2)];\r\n\r\n        if (!pre) throw \"target is no existent\";\r\n        let targetName = pre + curName.slice(2);\r\n        return em.dispatch(\"getItemDataByIdOrName\", targetName);\r\n    }\r\n    // 初始化物品等级\r\n    initPrefabLv(prefab, data) {\r\n        let label = prefab.getChildByName(\"lv\").getComponent(Label);\r\n        if (data.type == \"装备\" && data.lv) {\r\n            let list = { 1: \"一阶\", 2: \"二阶\", 3: \"三阶\", 4: \"四阶\", 5: \"五阶\", 6: \"六阶\", 7: \"七阶\", 8: \"八阶\", 9: \"九阶\" };\r\n            label.string = list[data.lv];\r\n        } else label.string = \"\";\r\n    }\r\n    onBtnEqu(e) {\r\n        let data = e.target.data;\r\n        if (!data) return;\r\n        let colorStr = this.getColorStrByQuality(data.quality - 1);\r\n        this.maskPar.getChildByName(\"name\").getComponent(RichText).string = colorStr + data.name + \"</color>\";\r\n        this.maskPar.getChildByName(\"description\").getComponent(RichText).string = data.description;\r\n        console.log(\"onBtnEqu\", data);\r\n        this.showEquDetail(data.name);\r\n        this.maskPar.active = true;\r\n    }\r\n    // 通过物品品质 获得 物品颜色值\r\n    getColorStrByType(index) {\r\n        index > 2 ? 2 : index;\r\n        return [\"<color=#757575>\", \"<color=#A474CF>\", \"<color=#DDA75A>\"][index];\r\n    }\r\n    getColorStrByQuality(index) {\r\n        index > 4 ? 4 : index;\r\n        return [\"<color=#599A65>\", \"<color=#728CC7>\", \"<color=#A474CF>\", \"<color=#C65C37>\", \"<color=#DDA75A>\"][index];\r\n        // return [\"<color=#7EFFA7>\",\"<color=#7EEAFF>\",\"<color=#837EFF>\",\"<color=#FFB77E>\",\"<color=#FFE000>\"][index];\r\n    }\r\n    showEquDetail(equName) {\r\n        let data = em.dispatch(\"usingHeroBasePropertyFun\", \"getEquDataByName\", equName);\r\n        let effects = data.qData.effect;\r\n        //根据quality 设置颜色 还没写\r\n        let string = \"\";\r\n        for (const id of effects) {\r\n            let effect = em.dispatch(\"usingHeroBasePropertyFun\", \"getEquEffectData\", id);\r\n            console.log(\"effect\", effect);\r\n            // let colorStr = this.getColorStrByQuality(effect.quality - 1);\r\n            let colorStr = this.getColorStrByType(effect.type - 1);\r\n            string = string + colorStr + effect.name + \":\" + effect.description + \"</color>\\n\";\r\n        }\r\n        if (data.lData.baseDamage) string = string + \"基础伤害:+\" + data.lData.baseDamage + \"\\n\";\r\n        if (data.lData.damageTimes) string = string + \"伤害加成倍数:+\" + data.lData.damageTimes + \"\\n\";\r\n        if (data.lData.attackInterval) string = string + \"攻击间隔:\" + data.lData.attackInterval + \"\\n\";\r\n        if (data.lData.blood) string = string + \"血量:+\" + data.lData.blood + \"\\n\";\r\n        if (data.lData.CHR) string = string + \"暴击率:+\" + data.lData.CHR + \"\\n\";\r\n        if (data.lData.moveSpeed) string = string + \"移动速度:+\" + data.lData.moveSpeed + \"\\n\";\r\n        this.maskPar.getChildByName(\"description\").getComponent(RichText).string = string;\r\n    }\r\n    onBtnOpen() {\r\n        this.node.active = true;\r\n    }\r\n    onBtnClose() {\r\n        em.dispatch(\"usingHeroInfoLayerFun\", \"updateStorageSpace\");\r\n        this.node.active = false;\r\n    }\r\n}\r\n\r\n\r\n"]}